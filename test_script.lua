local a={}local b={GRAY=rgbm(0.2,0.2,0.2,1),LIGHT_GREEN=rgbm(0,1,0,1),YELLOW=rgbm(1,1,0,1),RED=rgbm(1,0,0,1),GREEN=rgbm(0,1,0,1),WHITE=rgbm(1,1,1,1),BLACK=rgbm(0,0,0,0.5),TRANSPARENT=rgbm(0,0,0,0),NEON_RED=rgbm(1,0,0,0.9),DARK_GRAY=rgbm(0.1,0.1,0.1,0.3)}local c={}for d=1,4 do c[d]={alpha=0,scale=0.5,active=false}end;function a.displayLights()a.configureLights(1,1,true)for d=1,4 do c[d].active=true;c[d].alpha=1;c[d].scale=1 end end;function a.hideLights()a.configureLights(0,0.5,false)end;function a.configureLights(e,f,g)for d=1,4 do c[d].alpha=e;c[d].scale=f;c[d].active=g end end;function a.configureLight(h,e,f,g)c[h].alpha=e;c[h].scale=f;c[h].active=g end;function a.fadeInLights(i)for d=1,4 do if c[d].active then c[d].alpha=math.min(c[d].alpha+i*12,1)c[d].scale=math.min(c[d].scale+i*12,1)if c[d].alpha>=1 and c[d].scale>=1 then c[d].active=false end end end end;local function j(k,l,m,n)local o=5;for p=o,1,-1 do local q=1+p/o*n/100;local r=m.mult*(1-(p-1)/o)*0.2;local s=l*q;local t=rgbm(m.r,m.g,m.b,r)ui.drawCircleFilled(k,s,t,64)end;ui.drawCircleFilled(k,l,m,64)end;function a.draw(u,v,w,x)local y=u=="vertical"and vec2(80*v,300*v)or vec2(300*v,80*v)local z=vec2(0,0)ui.drawRectFilled(z,z+y,b.BLACK,10*v)local A=30*v;local B=13*v;local C={}for d=1,4 do local D=z.y+(d-1)*(A*2+B)+B;local k;if u=='vertical'then k=vec2(z.x+y.x/2,D+A)else k=vec2(D+A,y.y/2)end;table.insert(C,k)end;for d,k in ipairs(C)do ui.drawCircleFilled(k,A,b.DARK_GRAY,64)end;if not x then for d=1,4 do if c[d].active then c[d].alpha=math.min(c[d].alpha+ui.deltaTime()*2,1)c[d].scale=math.min(c[d].scale+ui.deltaTime()*2,1)if c[d].alpha>=1 and c[d].scale>=1 then c[d].active=false end end end end;for d,k in ipairs(C)do local m;if x then m=b.YELLOW else if w<4 then if d<=w then m=b.RED end elseif w==4 then if d==4 then m=b.GREEN end end end;if m then local E=c[d]local e=E and E.alpha or 1;local f=E and E.scale or 1;local F=rgbm(m.r,m.g,m.b,e)local G=A*f;j(k,G,F,15)end end end;local H={}H.LightType={DBZ=0,VDM=1}local I=ac.getCarID(0).."_trackLights_Data"local J={ac.StructItem.key(I.."_"..0),lightsOnTrack=ac.StructItem.boolean(),lightsEmbedInTrack=ac.StructItem.boolean(),lightsOnTrackServer=ac.StructItem.boolean(),trackLightPosition=ac.StructItem.vec3(),trackLightsRotation=ac.StructItem.float()}local K=ac.connect(J,false,ac.SharedNamespace.Shared)local L=3;local M="go0"local N={top=0,bottom=1}local O=N.bottom;local P;local Q;local R;local S;local function T(U,V,W)local X=ac.findNodes('trackRoot:yes'):loadKN5(U.."\\vdm_lights.kn5")M="start_"L=4;O=N.bottom;X:setPosition(V)Q=vec3()if W~=0 then X:setRotation(vec3(0,1,0),math.rad(W))end;return X end;local function Y(U,V,W)local X=ac.findNodes('trackRoot:yes'):loadKN5(U.."\\letsgo.kn5")M="go0"L=3;O=N.top;X:findMeshes("Objet006"):setTransparent(true)Q=vec3(0,0.165,0)X:setPosition(V:clone():add(Q))if W~=0 then X:setRotation(vec3(0,1,0),math.rad(W))end;return X end;local function Z(_,V,W,a0)K.trackLightPosition=V:clone()K.trackLightsRotation=W;if _==H.LightType.VDM then if a0 then web.loadRemoteAssets("https://github.com/Dasde/Start_Lights_updates/raw/refs/heads/main/assets/vdm_lights.zip",function(a1,U)P=T(U,V,W)end)return P end;return T("content/cars/vdm_lights",V,W)else if a0 then web.loadRemoteAssets("https://github.com/Dasde/Start_Lights_updates/raw/refs/heads/main/assets/letsgo.zip",function(a1,U)P=Y(U,V,W)end)return P end;return Y("assets",V,W)end end;function H.clearSavedLights(a0)H.removeLightMesh()K.trackLightPosition=nil;K.trackLightsRotation=0;K.lightsOnTrack=false;K.lightsOnTrackServer=false;if not a0 then local a2=ac.getFolder(ac.FolderID.CurrentTrackLayoutUI).."/".."track_lights.ini"if io.exists(a2)then ac.pauseFilesWatching(true)os.remove(a2)ac.pauseFilesWatching(false)end end end;local function a3()if K.lightsEmbedInTrack then return true end;if K.lightsOnTrack or K.lightsOnTrackServer then return false end;local X=ac.findNodes('trackRoot:yes'):findMeshes("go01")return X:name()~=""end;local function a4(a5,a6)return vec3(a5:get(a6,"X",0.000),a5:get(a6,"Y",0.000),a5:get(a6,"Z",0.000))end;local function a7(a5,a6,_,a0)if P then H.rotateTrackLights(a5:get(a6,"ROT",0))H.setTrackLightPosition(a4(a5,a6))else P=Z(_,a4(a5,a6),a5:get(a6,"ROT",0),a0)end;K.lightsOnTrackServer=true;K.lightsOnTrack=true end;function H.loadOnlineConfig(a5,_,a0)local a8=ac.getTrackFullID()if a5 then for a9,a6 in a5:iterate('TRACK_START_LIGHT')do local aa=a5:get(a6,"TRACK","")if aa==a8 then a7(a5,a6,_,a0)end end end;if not K.lightsOnTrackServer then web.get('https://api.github.com/repos/Dasde/Start_Lights_tracks/contents',function(a1,ab)if ab then local ad=JSON.parse(ab.body)for a9,aa in ipairs(ad)do if aa.name==a8 ..".ini"then web.get(aa.download_url,function(a1,ab)local ae=ac.INIConfig.parse(ab.body)local a6="TRACK_START_LIGHT"a7(ae,a6,_,a0)end)end end end end)end end;function H.init(_,af,a0)if P and af then P:dispose()P=nil end;if a0 and H.trackHasLightMesh()then return end;if a3()then M="go0"ac.findNodes('trackRoot:yes'):findMeshes("Objet006"):setTransparent(true)ac.applyContentConfig(-1,"[CONDITION_02]\nNAME = BLINK1\nINPUT = NONE\n[CONDITION_03]\nNAME = BLINK2\nINPUT = NONE\n[CONDITION_04]\nNAME = BLINK3\nINPUT = NONE")K.trackLightPosition=ac.findNodes('trackRoot:yes'):findMeshes("go01"):boundingSphere()K.trackLightPosition:add(vec3(0,-0.99788,0))K.lightsEmbedInTrack=true;K.lightsOnTrack=true else if not a0 then K.lightsOnTrackServer=false end;local ag=ac.INIConfig.onlineExtras()H.loadOnlineConfig(ag,_,a0)if not K.lightsOnTrackServer and not a0 then local ah=ac.getFolder(ac.FolderID.CurrentTrack).."/extension/".."track_lights.ini"local a2=ac.getFolder(ac.FolderID.CurrentTrackLayoutUI).."/".."track_lights.ini"if io.exists(ah)then ac.pauseFilesWatching(true)local ai=ac.INIConfig.load(ah)ai:set("POSITION","X",ai:get("Position","x",0))ai:set("POSITION","Y",ai:get("Position","y",0))ai:set("POSITION","Z",ai:get("Position","z",0))ai:set("POSITION","ROT",ai:get("Position","rot",0))if not io.move(ah,a2)then os.remove(ah)end;ac.pauseFilesWatching(false)end;if io.exists(a2)then local aj=ac.INIConfig.load(a2)if P then H.rotateTrackLights(aj:get("POSITION","ROT",0))H.setTrackLightPosition(a4(aj,"POSITION"))else P=Z(_,a4(aj,"POSITION"),aj:get("POSITION","ROT",0),a0)end;K.lightsOnTrack=true end end end end;function H.saveTrackLights(a0)if a0 then return end;local a2=ac.getFolder(ac.FolderID.CurrentTrackLayoutUI).."/".."track_lights.ini"local aj=ac.INIConfig.load(a2)ac.pauseFilesWatching(true)aj:set("POSITION","X",math.round(K.trackLightPosition.x,3))aj:set("POSITION","Y",math.round(K.trackLightPosition.y,3))aj:set("POSITION","Z",math.round(K.trackLightPosition.z,3))aj:set("POSITION","ROT",math.round(K.trackLightsRotation,3))aj:save()ac.pauseFilesWatching(false)end;function H.reloadTrackLights(ak,af,al)if P and af then P:dispose()P=nil end;if P then H.rotateTrackLights(K.trackLightsRotation)H.setTrackLightPosition(K.trackLightPosition)else P=Z(ak,K.trackLightPosition,K.trackLightsRotation,al)end end;function H.resetTrackLights(ak,al)K.trackLightPosition=R;K.trackLightsRotation=S;if P then H.rotateTrackLights(K.trackLightsRotation)H.setTrackLightPosition(K.trackLightPosition)else P=Z(ak,K.trackLightPosition,K.trackLightsRotation,al)end end;function H.displayLightMesh(_,a0)if P then P:dispose()end;P=Z(_,K.trackLightPosition,K.trackLightsRotation,a0)K.lightsOnTrack=true end;function H.displayLightMeshAheadCar(_,a0)if P then P:dispose()end;local am=ac.getCar(0).bodyTransform:transformPoint(vec3(0,0,5))P=Z(_,am,0,a0)end;function H:enableEditionMode(i,_,al)if ui.mouseDoubleClicked(ui.MouseButton.Left)then local an=vec3(0,0,0)local ao=render.createMouseRay()if physics.raycastTrack(ao.pos,ao.dir,ao.length,an)~=-1 then K.trackLightPosition=an:clone()an:add(Q)if P then P:setPosition(an:clone())else K.trackLightsRotation=0;P=Z(_,K.trackLightPosition,0,al)end;K.lightsOnTrack=true end end end;function H.removeLightMesh()if not K.lightsEmbedInTrack and P then P:dispose()P=nil end end;H.TrackLightColors={green=rgb(0,128,32),orange=rgb(251,117,0),off=rgb(0,0,0)}function H.getLightCount()return L end;function H.getLightId(V)if O==N.top then return L-(V-1)else return V end end;function H.trackHasLightMesh()return(K.lightsOnTrack or K.lightsOnTrackServer)and K.trackLightPosition or K.lightsEmbedInTrack end;function H.trackHasEmbedLightMesh()return K.lightsEmbedInTrack end;function H.setTrackLightColor(h,m)local X=ac.findNodes('trackRoot:yes'):findMeshes(M..h)X:setMaterialProperty('ksEmissive',m)end;function H.getTrackLightPosition()if not K.trackLightPosition then return vec3()end;return K.trackLightPosition end;function H.setTrackLightPosition(ap)K.trackLightPosition=ap:clone()if P then P:setPosition(ap:clone():add(Q))end end;function H.keepTrackLightPositionAndRotation()R=K.trackLightPosition:clone()S=K.trackLightsRotation end;function H.getTrackLightsRotation()if not K.trackLightsRotation then return 0 end;return K.trackLightsRotation end;function H.setTrackLightsRotation(aq)K.trackLightsRotation=aq end;function H.rotateTrackLights(aq)K.trackLightsRotation=aq;P:setRotation(vec3(0,1,0),math.rad(aq))end;function H.turnOffLights()for d=1,L+1,1 do H.setTrackLightColor(d,H.TrackLightColors.off)end end;local ar={}local v=1.0;local u='vertical'local as=false;local at=ac.getCarID(0).."_trafficLights"local au={ac.StructItem.key(at.."_"..0),Connected=ac.StructItem.boolean(),Started=ac.StructItem.boolean(),Light1On=ac.StructItem.boolean(),Light2On=ac.StructItem.boolean(),Light3On=ac.StructItem.boolean(),Light4On=ac.StructItem.boolean(),YellowBlinking=ac.StructItem.boolean()}local av=ac.connect(au,false,ac.SharedNamespace.Shared)av.Connected=true;function ar.setOrientation(aw)if aw=='vertical'or aw=='horizontal'then u=aw else error("Invalid orientation. Use 'vertical' or 'horizontal'.")end end;local ak;function ar.set3DModType(ax)ak=ax end;local ay=nil;local az=""local function aA(aB)if ay then ay:stop()ay:dispose()end;local aC=az.."sounds/"..aB..".mp3"ay=ac.AudioEvent.fromFile({filename=aC,use3D=false,loop=false},false)ay.cameraExteriorMultiplier=1;ay.cameraInteriorMultiplier=1;ay.cameraTrackMultiplier=1;ay:start()end;local aD=0;local aE=0;local aF=0;local aG=false;local aH=false;local aI=0;local x=false;local aJ=0;local aK=1.0;local aL=false;local aM=2;local aN=false;local aO=true;local aP=true;local aQ=false;local aR=false;local al=false;function ar.init(aS,ay,aT,aU,aV,aW,aX)ar.setScale(aS)ar.setUseSound(ay)ar.setOrientation(aT)ar.set3DModType(aU)ar.setSendChatMessage(aV)ar.setUse3DLights(aW)H.init(aU,false,aX)al=aX or false;if al then web.loadRemoteAssets("https://github.com/Dasde/Start_Lights_updates/raw/refs/heads/main/sounds.zip",function(a1,U)az=U.."\\"end)end end;function ar.setUseSound(aY)aN=aY end;function ar.setUseClassicLightsHUD(aY)aO=aY end;function ar.setUse3DLights(aY)aP=aY end;function ar.setSendChatMessage(aY)as=aY end;function ar.trackLightEdition(aY)aR=aY end;function ar.rotateTrackLights(aq)H.rotateTrackLights(aq)end;function ar.getTrackLightsRotation()return H.getTrackLightsRotation()end;function ar.setAndSaveTrackLights(ap,aZ)if H.getTrackLightPosition()==ap and H.getTrackLightsRotation()==aZ then return end;H.setTrackLightPosition(ap)H.setTrackLightsRotation(aZ)if not al then H.saveTrackLights()end;if not H.trackHasLightMesh()then if al then H.displayLightMesh(ak,true)else H.init(ak,false)end else H.rotateTrackLights(aZ)end end;function ar.getTrackLightConfig()local ap=H.getTrackLightPosition()return string.format("[TRACK_START_LIGHT_...]\nTRACK=%s\nX=%.3f\nY=%.3f\nZ=%.3f\nROT=%.3f",ac.getTrackFullID(),ap.x,ap.y,ap.z,H.getTrackLightsRotation())end;function ar.saveTrackLights()H.saveTrackLights(al)end;function ar.reloadTrackLights(af)H.reloadTrackLights(ak,af,al)end;function ar.keepTrackLightPositionAndRotation()H.keepTrackLightPositionAndRotation()end;function ar.resetTrackLights()H.resetTrackLights(ak,al)end;function ar.clearSavedLights()H.clearSavedLights(al)end;function ar.reloadOnlineConfig()H.loadOnlineConfig(ac.INIConfig.onlineExtras(),ak,al)end;function ar.SetIsYellowBlinking(a_)x=a_;if a_ then aJ=0;a.displayLights()aG=true;av.YellowBlinking=true;if not H.trackHasLightMesh()and aP then H.displayLightMeshAheadCar(ak,al)end;H.setTrackLightColor(H.getLightId(1),H.TrackLightColors.orange)H.setTrackLightColor(H.getLightId(2),H.TrackLightColors.orange)H.setTrackLightColor(H.getLightId(3),H.TrackLightColors.orange)if H.getLightCount()>3 then H.setTrackLightColor(H.getLightId(4),H.TrackLightColors.orange)end;aF=0;aE=0;if aN then aA("longBeep")end else aG=false;av.YellowBlinking=false;H.setTrackLightColor(H.getLightId(1),H.TrackLightColors.off)H.setTrackLightColor(H.getLightId(2),H.TrackLightColors.off)H.setTrackLightColor(H.getLightId(3),H.TrackLightColors.off)if H.getLightCount()>3 then H.setTrackLightColor(H.getLightId(4),H.TrackLightColors.off)end;if not H.trackHasLightMesh()then H.removeLightMesh()end end;av.Started=false;av.Light1On=false;av.Light2On=false;av.Light3On=false;av.Light4On=false end;function ar.isYellowBlinking()return x end;function ar.isStartLightsActive()return aG end;function ar.setStartLightsVisible(b0)aH=b0 end;function ar.stopStartLights()a.hideLights()aG=false;av.Started=false;av.Light1On=false;av.Light2On=false;av.Light3On=false;av.Light4On=false;H.turnOffLights()aF=0;aE=0;aH=false end;function ar.triggerStartLights(b1,b2)aQ=b2;if b1 then aM=b1 else aM=2 end;aG=true;av.Started=true;av.Light1On=false;av.Light2On=false;av.Light3On=false;av.Light4On=false;aF=0;aE=0;aH=true;if not H.trackHasLightMesh()and aP then H.displayLightMeshAheadCar(ak,al)end;a.hideLights()aI=0;x=false;aJ=0;if as and aQ then ac.sendChatMessage("[StartLights] Get Ready")end end;function ar.updateStartLights(i)if aR then H:enableEditionMode(i,ak,al)end;if not aG then return end;if x then aH=true;aJ=aJ+i;if aJ>=aK then aJ=0;aL=not aL;local b3=aL and 0 or 1;if b3==1 and aN then aA("longBeep")end;a.configureLights(b3,1,true)H.setTrackLightColor(H.getLightId(1),b3==1 and H.TrackLightColors.orange or H.TrackLightColors.off)H.setTrackLightColor(H.getLightId(2),b3==1 and H.TrackLightColors.orange or H.TrackLightColors.off)H.setTrackLightColor(H.getLightId(3),b3==1 and H.TrackLightColors.orange or H.TrackLightColors.off)if H.getLightCount()>3 then H.setTrackLightColor(H.getLightId(4),b3==1 and H.TrackLightColors.orange or H.TrackLightColors.off)end end else if aF<4 then aE=aE+i;if aE>=1 then aE=0;aF=aF+1;if aN then if aF<4 then aA("shortBeep")else aA("longBeep")end end;if as and aQ then if aF<4 then ac.sendChatMessage(string.format("[StartLights] %d",aF))else ac.sendChatMessage("[StartLights] Go!")end end;if aF<=4 then a.configureLight(aF,0,0.5,true)else aG=false;aF=0;aE=0 end end end;aH=aG;a.fadeInLights(i)if aF==4 then aI=aI+i;if aI>=aM then aF=5;a.hideLights()aG=false;av.Started=false;if not H.trackHasLightMesh()then H.removeLightMesh()end end end;if aF>=1 and aF<4 then av.Light1On=true;H.setTrackLightColor(H.getLightId(1),H.TrackLightColors.orange)else av.Light1On=false;H.setTrackLightColor(H.getLightId(1),H.TrackLightColors.off)end;if aF>=2 and aF<4 then av.Light2On=true;H.setTrackLightColor(H.getLightId(2),H.TrackLightColors.orange)else av.Light2On=false;H.setTrackLightColor(H.getLightId(2),H.TrackLightColors.off)end;if aF>=3 and aF<4 then av.Light3On=true;H.setTrackLightColor(H.getLightId(3),H.TrackLightColors.orange)else av.Light3On=false;H.setTrackLightColor(H.getLightId(3),H.TrackLightColors.off)end;local L=H.getLightCount()if aF==4 then av.Light4On=true;if L<4 then H.setTrackLightColor(H.getLightId(1),H.TrackLightColors.green)H.setTrackLightColor(H.getLightId(2),H.TrackLightColors.green)H.setTrackLightColor(H.getLightId(3),H.TrackLightColors.green)else H.setTrackLightColor(H.getLightId(4),H.TrackLightColors.green)end else av.Light4On=false;if L>3 then H.setTrackLightColor(H.getLightId(4),H.TrackLightColors.off)end end end end;function ar.draw()if aH and aO then a.draw(u,v,aF,x)end end;function ar.drawMiniHUD()local b4=ui.windowWidth()/300;a.draw("horizontal",b4,aF,x)end;function ar.setScale(f)v=f end;function ar.getScale()return v end;function ar.updateTime(i)aD=aD+i end;function ar.trackHasLightMesh()return H.trackHasLightMesh()end;function ar.trackHasEmbedLightMesh()return H.trackHasEmbedLightMesh()end;function ar.getTrackLightPosition()return H.getTrackLightPosition()end;function ar.disposeLightMesh()H.removeLightMesh()end;local b5={}local b6=__dirname==nil;local b7=ac.getCarID(0).."_startLightsApp"local b8={ac.StructItem.key(b7 .."_"..0),serverScriptConnected=ac.StructItem.boolean(),appConnected=ac.StructItem.boolean(),isAdmin=ac.StructItem.boolean(),competitionMode=ac.StructItem.boolean(),friendlyCompetitionMode=ac.StructItem.boolean()}local b9=ac.connect(b8,false,ac.SharedNamespace.Shared)if b6 then b9.serverScriptConnected=true else b9.appConnected=true end;local ba=20;local bb=30;local bc=2;local bd=1;local be=true;local bf=ac.storage{useTriggerRange=true,triggerRange=ba,greenLightDuration=bc,classicLightsScale=bd,useSound=be,classicLightsOrientation="horizontal",useClassicLightsHUD=true,use3DLights=true,lightsModType=H.LightType.DBZ,sendChatMessage=true,appPositionX=50,appPositionY=50}local bg=table.new(5,5)local bh=table.new(5,5)local bi;local bj;local bk;local bl;local bm=0;local bn;local bo=false;local bp=0;local bq=false;local br;local bs;local bt=false;local bu={}local bv={}local bw=ac.getSim()local bx=false;local by=vec2(150,50)local bz=0;local bA;local bB;local bC;local bD;local bE;local bF="This mode is for friendly battles. \nEvery driver has to activate it to participate.\nWith this mode every driver can activate the start lights without range restrictions.\nThe lights will be only activated for those with that mode activated"local bG=0;local bH=0;local bI;local bJ=false;local bK=vec2(bf.appPositionX,bf.appPositionY)local bL=vec2(500,500)local bM=vec2(500,500)local bN;local bO=false;local function bP(bQ)if not bQ or bQ==0 then return end;if not table.contains(bg,bQ)then table.insert(bg,bQ)end end;local function bR(bQ)if not bQ or bQ==0 then return false end;if not table.contains(bh,bQ)then table.insert(bh,bQ)return true end;return false end;local function bS()if b9.isAdmin or bw.isAdmin then if bR(ac.getCar(0).sessionID)then bB({admins=bh},true)end end end;local function bT(bU)return table.contains(bh,bU)or table.contains(bg,bU)end;local function bV()return b9.isAdmin or bw.isAdmin or bT(ac.getCar(0).sessionID)end;local function bW()if not bO then return true end;if b6 and b9.appConnected then return true end;return false end;local function bX(bY,bZ)bZ=bZ or{}table.clear(bZ)if not bY then return end;for b_ in bY:gmatch("([^\n]*)\n?")do if b_~=""then if b_:match("^%s*#")then goto c0 end;local c1=b_:match("^%s*(.-)%s*$")if c1~=""then table.insert(bZ,c1)end::c0::end end end;local function c2()if not io.exists(__dirname.."/whiteList.txt")then io.save(__dirname.."/whiteList.txt","# Add names to the whitelist, one per line\n# Example: John Doe\n")end;local c3=io.load(__dirname.."/whiteList.txt",nil)bX(c3,bu)if table.count(bu)>0 then bt=true else bt=false end;ac.onFileChanged(__dirname.."/whiteList.txt",function()c3=io.load(__dirname.."/whiteList.txt",nil)bX(c3,bu)if#bu>0 then bt=true else bt=false end end)if not io.exists(__dirname.."/blackList.txt")then io.save(__dirname.."/blackList.txt","# Add names to the blackList, one per line\n# Example: John Doe\n")end;local c4=io.load(__dirname.."/blackList.txt",nil)bX(c4,bv)ac.onFileChanged(__dirname.."/blackList.txt",function()c4=io.load(__dirname.."/blackList.txt",nil)bX(c4,bv)end)end;local function c5(ax)if not bw.isReplayActive then local V=ar.getTrackLightPosition()local c6={type=ax,time=bw.currentSessionTime,positionX=V.x,positionY=V.y,positionZ=V.z,rotation=ar.getTrackLightsRotation()}bm=bm+1;ac.writeReplayBlob("start_lights_"..bm,JSON.stringify(c6))ac.writeReplayBlob("start_lights_count",bm)end end;local function c7()bn={}bm=tonumber(ac.readReplayBlob("start_lights_count"))if bm and bm>0 then for d=1,bm+1,1 do local c8=ac.readReplayBlob("start_lights_"..d)local c6=JSON.parse(c8)table.insert(bn,c6)end end end;local function c9(b2)if ar.isYellowBlinking()then return end;if not b6 then ac.setAppOpen("Start_Lights")ac.setAppWindowVisible("Start_Lights")ac.setWindowOpen("main",true)else ac.setAppWindowVisible("Start_Lights","main",false)end;ar.triggerStartLights(bf.greenLightDuration,b2)c5("start")end;local function ca(cb)if cb and not b6 then ac.setAppOpen("Start_Lights")ac.setAppWindowVisible("Start_Lights")ac.setWindowOpen("main",true)end;ar.SetIsYellowBlinking(cb)ar.setStartLightsVisible(cb)c5(cb and"false_start"or"end_false_start")end;local function cc()if bw.isOnlineRace then if b9.competitionMode then if bV()then if ar.trackHasLightMesh()then bD{start=true,falseStart=false,endFalseStart=false,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation()}else ac.setMessage("Start Lights","No track light configured yet.",'illegal')end else ac.setMessage("Start Lights","Competition mode activated, only admins can operate the lights.",'illegal')end elseif b9.friendlyCompetitionMode then if ar.trackHasLightMesh()then bD{start=true,falseStart=false,endFalseStart=false,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation(),friendlyCompetitionMode=true}else ac.setMessage("Start Lights","No track light configured yet.",'illegal')end elseif ar.trackHasLightMesh()then if ac.getCar(0).position:distance(ar.getTrackLightPosition())<=bf.triggerRange then bD{start=true,falseStart=false,endFalseStart=false,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation()}else ac.setMessage("Start Lights","You are too far.",'illegal')end else bD{start=true,falseStart=false,endFalseStart=false,lightPosition=nil,lightRotation=0}end else c9(true)end end;local function cd()if not ar.isYellowBlinking()then if bw.isOnlineRace then if b9.competitionMode then if bV()then bD{start=false,falseStart=true,endFalseStart=false,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation()}else ac.setMessage("Start Lights","Competition mode activated, only admins can operate the lights.",'illegal')end elseif b9.friendlyCompetitionMode then if ar.trackHasLightMesh()then bD{start=false,falseStart=true,endFalseStart=false,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation(),friendlyCompetitionMode=true}else ac.setMessage("Start Lights","No track light configured yet.",'illegal')end elseif ar.trackHasLightMesh()then if ac.getCar(0).position:distance(ar.getTrackLightPosition())<=bb then bD{start=false,falseStart=true,endFalseStart=false,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation()}else ac.setMessage("Start Lights","You are too far.",'illegal')end else bD{start=false,falseStart=true,endFalseStart=false,lightPosition=nil,lightRotation=0}end else ca(false)end else if bw.isOnlineRace then if b9.competitionMode then if bV()then bD{start=false,falseStart=false,endFalseStart=true,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation()}else ac.setMessage("Start Lights","Competition mode activated, only admins can operate the lights.",'illegal')end elseif b9.friendlyCompetitionMode then bD{start=false,falseStart=false,endFalseStart=true,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation(),friendlyCompetitionMode=true}else bD{start=false,falseStart=false,endFalseStart=true,lightPosition=nil,lightRotation=0}end else ca(false)end end end;local function ce()if ac.isLuaAppRunning("Traffic_Lights")then ac.uninstallApp("Traffic_Lights")end;br=ac.ControlButton('Start_Lights_TRIGGER_START_LIGHTS',{keyboard={key=ui.KeyIndex.A}})bs=ac.ControlButton('Start_Lights_TOGGLE_FALSE_START',{keyboard={key=ui.KeyIndex.F}})bC=ac.OnlineEvent({key=ac.StructItem.key("Start_Lights_toggle_competition_mode_events"),competitionMode=ac.StructItem.boolean(),grantedUsers=ac.StructItem.array(ac.StructItem.int8(),16),admins=ac.StructItem.array(ac.StructItem.int8(),16),lightPosition=ac.StructItem.vec3(),lightRotation=ac.StructItem.float(),forceUpdate=ac.StructItem.boolean()},function(cf,c6)if bW()then return end;if b9.competitionMode==c6.competitionMode and cf.index==0 then return end;if c6.competitionMode~=b9.competitionMode then if c6.competitionMode then ac.setMessage("Start Lights","Competition Mode activated")b9.friendlyCompetitionMode=false else ac.setMessage("Start Lights","Competition Mode deactivated")end end;b9.competitionMode=c6.competitionMode;if(not ar.trackHasLightMesh()or c6.forceUpdate)and c6.lightPosition and c6.lightPosition~=vec3()then ar.setAndSaveTrackLights(c6.lightPosition,c6.lightRotation)end;for d=0,15,1 do bP(c6.grantedUsers[d])end;for d=0,15,1 do bR(c6.admins[d])end end,ac.SharedNamespace.Shared,false,{processPostponed=true})bB=ac.OnlineEvent({key=ac.StructItem.key("Start_Lights_update_granted_users_events"),addedGrantedUsers=ac.StructItem.array(ac.StructItem.int8(),16),removedGrantedUsers=ac.StructItem.array(ac.StructItem.int8(),16),admins=ac.StructItem.array(ac.StructItem.int8(),16)},function(cf,c6)if bW()then return end;if cf.index==0 then return end;bP(cf.sessionID)for d=0,15,1 do bP(c6.addedGrantedUsers[d])end;for d=0,15,1 do if table.contains(bg,c6.removedGrantedUsers[d])then table.removeItem(bg,c6.removedGrantedUsers[d])end end;for d=0,15,1 do bR(c6.admins[d])end end,ac.SharedNamespace.Shared)if table.contains(bh,ac.getCar(0).sessionID)then bB({admins=bh},true)end;bS()bD=ac.OnlineEvent({key=ac.StructItem.key("Start_Lights_trigger_events"),start=ac.StructItem.boolean(),falseStart=ac.StructItem.boolean(),endFalseStart=ac.StructItem.boolean(),lightPosition=ac.StructItem.vec3(),lightRotation=ac.StructItem.float(),friendlyCompetitionMode=ac.StructItem.boolean()},function(cf,c6)if bW()then return end;if not b6 and not b9.competitionMode and cf.index>0 then local cg=ac.getDriverName(cf.index)if bt then local ch=false;for ci,cj in ipairs(bu)do if cg:lower()==cj:lower()then ch=true;break end end;if not ch then return end else for ci,cj in ipairs(bv)do if cg:lower()==cj:lower()then return end end end end;if c6.endFalseStart then ca(false)return end;if c6.start or c6.falseStart then if(b9.competitionMode or b9.friendlyCompetitionMode)and not ar.trackHasEmbedLightMesh()then if c6.lightPosition~=ar.getTrackLightPosition()or c6.lightRotation~=ar.getTrackLightsRotation()then ar.setAndSaveTrackLights(c6.lightPosition,c6.lightRotation)end end;if not ar.trackHasLightMesh()and c6.lightPosition and c6.lightPosition~=vec3()then ar.setAndSaveTrackLights(c6.lightPosition,c6.lightRotation)end;if cf.index>0 then local ck=cf.position;local cl=ac.getCar(0).position;local cm=c6.falseStart and bb or bf.triggerRange;local cn;local co;if not(b9.friendlyCompetitionMode or b9.competitionMode)then co=ar.trackHasLightMesh()and ar.getTrackLightPosition()or cl;cn=ck:distance(co)if cn>cm then return end end;if bf.useTriggerRange then co=ar.trackHasLightMesh()and ar.getTrackLightPosition()or ck;cn=cl:distance(co)if cn>cm then return end end end;if c6.falseStart then ca(true)else c9(cf.index==0)end end end,ac.SharedNamespace.Shared)bE=ac.OnlineEvent({key=ac.StructItem.key("Start_Lights_request_data_events")},function(cf,c6)if bW()or cf.index==0 then return end;local cp=#bh;local cq=#bg;if table.contains(bh,cf.sessionID)then cp=cp-1 end;if table.contains(bg,cf.sessionID)then cq=cq-1 end;if(cp>0 or cq>0)and not bV()or not ar.trackHasLightMesh()then return end;bC({competitionMode=b9.competitionMode,grantedUsers=bg,admins=bh,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation()},false,cf.sessionID)end,ac.SharedNamespace.Shared)setTimeout(function()bE({})end,10)ac.onClientConnected(function(cr,cs)if bW()then return end;setTimeout(function()if bV()or#bh==0 and#bg==0 then bC({competitionMode=b9.competitionMode,grantedUsers=bg,admins=bh,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation(),forceUpdate=true},false,cs)end end,5)end)ac.onClientDisconnected(function(cr,cs)if bW()then return end;if not bT(cs)then return end;if table.contains(bg,cs)then table.removeItem(bg,cs)if bV()then bB({removedGrantedUsers={cs}},true)end end;if table.contains(bh,cs)then table.removeItem(bh,cs)if bV()then bB({admins=bh},true)end end;if#bh==0 and#bg==0 then b9.competitionMode=false end end)ac.onSessionStart(function(ct,cu)if bW()then return end;if cu then bm=0;ac.writeReplayBlob("start_lights_count",0)c7()end end)ac.onChatMessage(function(cv,cw,cx)if bW()then return end;if cv:startsWith("[StartLights]")then return true end end)ac.checkAdminPrivileges()if bw.isReplayActive then c7()end;bO=true end;function script.windowCompetitionMode(i)if not bO then return end;bI=true;if not(bw.isAdmin or bT(ac.getCar(0).sessionID))then if b9.isAdmin then bS()end;ui.setCursor(10)ui.text("You are not a granted operator on this server.")end;local cy=(ar.isStartLightsActive()or ar.isYellowBlinking())and ui.windowSize():clone():add(vec2(0,-70))or ui.windowSize()ui.drawRect(vec2(0,0),cy,rgbm(0.6,0.6,0.6,0.15))ui.newLine(8)ui.pushFont(ui.Font.Title)ui.setNextItemWidth(450)ui.setCursorX(20)ui.text("Start Lights - Competition Mode    ")ui.setCursorX(20)if b9.competitionMode then ui.textColored("Activated",rgbm.colors.red)else ui.textColored("Not Activated",rgbm.colors.gray)end;ui.popFont()ui.newLine(2)ui.setCursorX(20)script.windowContentCompetitionMode(i)if ar.isStartLightsActive()or ar.isYellowBlinking()then local cz=ui.windowWidth()/300*80;ui.childWindow("mini-hud",vec2(ui.windowWidth(),cz),function()ar.drawMiniHUD()end)end end;function script.windowContentCompetitionMode(i)local cA=vec2(120,50)if bV()then local cB=20;if ar.trackHasLightMesh()then if ui.button("Force update start light position")then bC{competitionMode=b9.competitionMode,grantedUsers=bg,admins=bh,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation(),forceUpdate=true}end end;if not bj then bl=b9.competitionMode end;ui.setCursorX(cB)if ui.checkbox("Toggle Competition Mode",bl)then bl=not bl;bj=true end;if bw.isAdmin or b9.isAdmin then ui.setCursorX(cB)ui.text("Lights operators :")if not bi then bk=table.clone(bg)end;for d,cC in ac.iterateCars()do local cD=cC.index==0 or table.contains(bk,cC.sessionID)or table.contains(bh,cC.sessionID)ui.setCursorX(cB)if table.contains(bh,cC.sessionID)then ui.pushDisabled()end;if cC.isConnected then if ui.checkbox(ac.getDriverName(cC.index),cD)then cD=not cD;bi=true;if cD then table.insert(bk,cC.sessionID)else table.removeItem(bk,cC.sessionID)end end end;if table.contains(bh,cC.sessionID)then ui.popDisabled()end end;bi=not table.same(bg,bk)else bi=false;bk=table.clone(bg)end;ui.newLine(15)bj=b9.competitionMode~=bl;if bi or bj then ui.setCursorX(30)if ui.button("Validate",cA)then local cE,cF={},{}for a9,cG in ipairs(bk)do if not table.contains(bg,cG)then table.insert(cE,cG)end end;for a9,cG in ipairs(bg)do if not table.contains(bk,cG)then table.insert(cF,cG)end end;bg=table.clone(bk)if bj then bC{competitionMode=bl,grantedUsers=bg,admins=bh,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation()}bj=false;bi=false else bB{addedGrantedUsers=cE,removedGrantedUsers=cF}bi=false end end;ui.sameLine(0,ui.windowWidth()-300)if ui.button("Cancel",cA)then bj=false;bi=false end;ui.newLine(10)end end;if not b9.competitionMode then ui.setNextTextBold()ui.setCursorX(10)ui.text("Friendly Competition Mode")ui.setCursorX(10)local cH;if bI then if bH==0 then bH=ui.measureText(bF).x+10 end;cH=bH else if bG==0 then bG=ui.measureText(bF).x end;cH=bG end;ui.textAligned(bF,0,vec2(cH,100))ui.setCursorX(10)if ui.checkbox("Toggle Friendly Competition Mode",b9.friendlyCompetitionMode)then b9.friendlyCompetitionMode=not b9.friendlyCompetitionMode end;ui.newLine()end;if b9.competitionMode and bV()or b9.friendlyCompetitionMode then ui.setCursorX(30)if ui.button("Trigger Start!",cA)then cc()end;ui.sameLine(0,ui.windowWidth()-300)if ui.button("False Start!",cA)then cd()end;ui.newLine(10)end end;function script.windowSettings(i)if not bO then return end;bI=false;if b9.competitionMode then ui.pushFont(ui.Font.Huge)ui.setNextTextBold()ui.textColored("Competition Mode Activated!",rgbm.colors.red)ui.popFont()end;ui.pushFont(ui.Font.Title)ui.tabBar("settings",function()ui.tabItem("General",function()local cI;ui.text("Orientation :")if ui.radioButton("Vertical",bf.classicLightsOrientation=="vertical")then bf.classicLightsOrientation="vertical"ar.setOrientation(bf.classicLightsOrientation)script.resizeWindowMain()end;if ui.radioButton("Horizontal",bf.classicLightsOrientation=="horizontal")then bf.classicLightsOrientation="horizontal"ar.setOrientation(bf.classicLightsOrientation)script.resizeWindowMain()end;if ui.checkbox("Use Trigger Range",bf.useTriggerRange)then bf.useTriggerRange=not bf.useTriggerRange end;if bf.useTriggerRange then bf.triggerRange=ui.slider("Trigger Range (m)",bf.triggerRange,10,100)else bf.triggerRange=ba end;bf.greenLightDuration=ui.slider("Green Light Duration (s)",bf.greenLightDuration,1,10)bf.classicLightsScale,cI=ui.slider("Start Light Scale",bf.classicLightsScale,0.1,3)if cI then ar.setScale(bf.classicLightsScale)script.resizeWindowMain()end;if ui.checkbox("Use Sound",bf.useSound)then bf.useSound=not bf.useSound;ar.setUseSound(bf.useSound)end;if ui.checkbox("Display classic lights HUD",bf.useClassicLightsHUD)then bf.useClassicLightsHUD=not bf.useClassicLightsHUD;ar.setUseClassicLightsHUD(bf.useClassicLightsHUD)end;if ui.checkbox("Send chat message to non user of the app (Get Ready,1,2,3,Go!)",bf.sendChatMessage)then bf.sendChatMessage=not bf.sendChatMessage;ar.setSendChatMessage(bf.sendChatMessage)end;if ui.checkbox("Display 3D Lights in front of car. (if there are no lights on track already)",bf.use3DLights)then bf.use3DLights=not bf.use3DLights;ar.setUse3DLights(bf.use3DLights)end;if bf.use3DLights and io.fileExists(ac.getFolder(ac.FolderID.ContentCars).."/vdm_lights/vdm_lights.kn5")then ui.text("Choose your start lights :")local cJ=bf.lightsModType==H.LightType.DBZ;if ui.radioButton("DBZ",cJ)then bf.lightsModType=not cJ and H.LightType.DBZ or H.LightType.VDM;ar.set3DModType(bf.lightsModType)ar.reloadTrackLights(true)end;local cK=bf.lightsModType==H.LightType.VDM;if ui.radioButton("VDM",cK)then bf.lightsModType=not cK and H.LightType.VDM or H.LightType.DBZ;ar.set3DModType(bf.lightsModType)ar.reloadTrackLights(true)end end;ui.separator()ui.setNextTextBold()ui.text("How to trigger the start lights")if b9.competitionMode and not bV()then ui.textColored("Not available in Competition Mode",rgbm.colors.red)end;local cL=br:boundTo()if not cL then ui.text("The control to start the lights isn't configured yet.")else ui.text("Press "..cL.." to start the lights")end;br:control(by,ui.ControlButtonControlFlags.IgnoreConflicts)ui.setNextTextBold()ui.text("How to trigger false start")cL=bs:boundTo()if not cL then ui.text("The control to trigger a false start isn't configured yet.")else ui.text("Press "..cL.." to trigger a false start")end;bs:control(by,ui.ControlButtonControlFlags.IgnoreConflicts)if not b6 and ac.isLuaAppRunning("ext_controls")then ui.separator()ui.text("You can also change the controls with the Extended Controls app (Apps/Start Lights)")if ui.button("Open Extended Controls")then ac.setAppOpen("ext_controls")ac.setAppWindowVisible("ext_controls")end end;if not b6 then ui.separator()ui.setNextTextBold()ui.text("Whitelist and Blacklist Settings")if bt then ui.text("Whitelist is enabled. Only players in the whitelist can operate the start lights.")else ui.text("Whitelist is disabled. All players can operate the start lights.")end;if#bu>0 then ui.text("Whitelist: "..table.concat(bu,", "))else ui.text("Whitelist is empty.")end;if#bv>0 then ui.text("Blacklist: "..table.concat(bv,", "))else ui.text("Blacklist is empty.")end;if ui.button("Open Whitelist")then os.openInExplorer(__dirname.."/whiteList.txt")end;ui.sameLine(170)if ui.button("Open Blacklist")then os.openInExplorer(__dirname.."/blackList.txt")end end;ui.separator()ui.newLine(20)if not b6 then if ac.getPatchVersionCode()>=3459 then if ui.button("Restart app...",by)then ac.restartApp()end;ui.newLine()end end;ui.newLine()end)ui.tabItem("Track light editor",function()if ar.trackHasEmbedLightMesh()then ui.text("This track has its own start lights already. It's not editable.")ui.newLine()elseif ar.trackHasLightMesh()then ui.text(string.format("A track start light is already on track at position\n%s.",ar.getTrackLightPosition()))ui.separator()ui.newLine(15)else ui.newLine(5)if not b6 then ui.text("If you have a track_lights.ini file for the track paste it in the track layout folder and restart the app.")ui.separator()ui.newLine()if ac.getPatchVersionCode()>=3459 then if ui.button("Restart app...",by)then ac.restartApp()end end end;ui.sameLine()end;if not b6 then if not ar.trackHasEmbedLightMesh()then if ui.button("Open track folder...",vec2(220,by.y))then local a2=ac.getFolder(ac.FolderID.CurrentTrackLayoutUI).."/".."track_lights.ini"if io.exists(a2)then os.showInExplorer(a2)else os.openInExplorer(ac.getFolder(ac.FolderID.CurrentTrackLayoutUI))end end;ui.sameLine()end end;if ui.button("Reload Online Config...",vec2(240,by.y))then bx=false;ar.reloadOnlineConfig()end;ui.sameLine()if ar.trackHasLightMesh()and not ar.trackHasEmbedLightMesh()and not(b9.competitionMode and not bV())then if ui.button("Remove",by)then bx=false;ar.trackLightEdition(bx)ar.clearSavedLights()end end;if ar.trackHasLightMesh()and not ar.trackHasEmbedLightMesh()then if ui.button("Share",by)then bC({competitionMode=b9.competitionMode,grantedUsers=bg,admins=bh,lightPosition=ar.getTrackLightPosition(),lightRotation=ar.getTrackLightsRotation()},false)end end;if bx then ui.setMouseCursor(ui.MouseCursor.ResizeAll)ui.separator()ui.newLine(5)ui.text("Just double click on the map where you want to place the start lights.\nClick the save button when you are done.")ui.newLine(15)local cM=refnumber(ar.getTrackLightsRotation())ui.setNextItemWidth(350)ui.setCursorX((ui.windowWidth()-350)/2)if ui.slider("'##rotationSliderID'",cM,0,360,'Rotation: %.1f')then ar.rotateTrackLights(cM.value)end;ui.newLine(5)ui.setCursorX((ui.windowWidth()-2*by.x-10)/2)if ui.button("Save",by)then bx=false;ar.trackLightEdition(bx)ar.saveTrackLights()end;ui.sameLine()if ui.button("Cancel",by)then bx=false;ar.trackLightEdition(bx)ar.resetTrackLights()end else ui.setMouseCursor(ui.MouseCursor.Arrow)if not ar.trackHasEmbedLightMesh()and not(b9.competitionMode and not bV())then ui.sameLine()if ui.button(ar.trackHasLightMesh()and"Edit Light..."or"Create Light...",by)then bx=true;ar.keepTrackLightPositionAndRotation()ar.trackLightEdition(bx)end end;if ar.trackHasLightMesh()then ui.sameLine()if ui.button("Copy data",by)then if ac.setClipboardText(ar.getTrackLightConfig())then ui.toast(ui.Icons.Clipboard,"Data copied to clipboard")end end end end;ui.newLine()end)if b9.competitionMode and not bV()then ui.tabItem("Competition Mode",function()ui.pushFont(ui.Font.Huge)ui.setNextTextBold()ui.textColored("Competition Mode Activated!",rgbm.colors.red)ui.popFont()ui.text("Only admins can operate the Track Lights")end)else ui.tabItem("Competition Mode",function()script.windowContentCompetitionMode(i)ui.newLine()end)end;if not b6 then ui.tabItem("Updates",function()b5.drawUI()end)else ui.tabItem("Download the App!",function()ui.bulletText("Start Lights on every servers")ui.bulletText("Ability to operate the semaphore from the pit")ui.bulletText("Ability to save and reload your semaphore position for a track")ui.text("Download the App :")ui.sameLine()if ui.textHyperlink("https://vosan.co/app-tools/start-lights")then os.openURL("https://vosan.co/app-tools/start-lights")end;ui.newLine()end)end;ui.tabItem("About",function()ui.drawCircleFilled(vec2(ui.getCursorX()+ui.measureText("The Start Lights ").x+12,ui.getCursorY()+12),12,rgbm.colors.white)ui.text("The Start Lights "..string.codePointToUTF8(8482).." system is developped by")ui.sameLine()if ui.textHyperlink("DaZD")then os.openURL("https://linktr.ee/dazdsim")end;ui.text("Feel free to contact me if you need my assistance to set up a competition or a server or any feedback.")ui.text("My Discord is in the linktree linked above.")ui.newLine()ui.text("With ")ui.sameLine()if ui.textHyperlink("CDT - Ömer Bağdatlı")then os.openURL("https://www.instagram.com/rahvanr1/")end;ui.sameLine()ui.text(" we are building a list of semaphore position by track.")ui.text("That list is already used by the App, no need to add a Start Lights semaphore on those tracks.")ui.text("Contact us if you want to contribute or if you want your track to be added.")ui.newLine()ui.setNextTextBold()ui.text("How To")ui.newLine()ui.setNextTextBold()ui.bulletText("To add the Start Lights script to your server add this to your configuration :")local cN="[SCRIPT_...]\nSCRIPT = 'https://github.com/Dasde/Start_Lights_updates/raw/refs/heads/main/start_light_server_script.lua'"ui.text(cN)if ui.button("Copy to clipboard")then if ac.setClipboardText(cN)then ui.toast(ui.Icons.Clipboard,"Data copied to clipboard")end end;ui.newLine()ui.setNextTextBold()ui.bulletText("Operators can be added like this :")local cO="[TRACK_START_LIGHT_OPERATOR_...]\nSTEAM_ID=Steam id of the operator"ui.text(cO)if ui.button("Copy to clipboard###2")then if ac.setClipboardText(cO)then ui.toast(ui.Icons.Clipboard,"Data copied to clipboard")end end;ui.newLine()ui.setNextTextBold()ui.bulletText("Set custom semaphore position like this :")ui.text('Go to the track, position the semaphore then click "Copy data" in the "Track light editor" tab.')ui.text("Then paste the text in your configuration file.")ui.text("It should look like this :")ui.text("[TRACK_START_LIGHT_...]\nTRACK=cfd_val_de_vienne_2022\nX=495.0426940918\nY=1.5083720684052\nZ=69.54564666748\nROT=344.89999389648\n")ui.newLine()ui.separator()ui.text("You can support the project here :")ui.sameLine()if ui.textHyperlink("paypal.me/DaZDSim")then os.openURL("https://www.paypal.com/paypalme/DaZDSim")end;ui.newLine()end)end)ui.popFont()end;function script.resizeWindowMain()if b6 then return end;local cP=bf.classicLightsOrientation=="vertical"and vec2(math.max(80*bf.classicLightsScale,200),math.max(300*bf.classicLightsScale,50))or vec2(math.max(300*bf.classicLightsScale,200),math.max(80*bf.classicLightsScale,50))ac.setWindowSizeConstraints("main",cP,cP)end;function script.windowMain(i)if not bO then return end;bI=false;if ar.isStartLightsActive()or ar.isYellowBlinking()then script.drawUI(i)else if ui.windowHovered(bit.bor(ui.HoveredFlags.RootAndChildWindows,ui.HoveredFlags.AllowWhenBlockedByActiveItem))then ar.setStartLightsVisible(true)script.drawUI(i)if not b6 and not ac.isWindowOpen("settings")then ui.offsetCursorY((ui.windowHeight()-50)/2)ui.offsetCursorX((ui.windowWidth()-200)/2)if ui.button("Show Start Lights settings...",vec2(200,50))then script.openWindowSettings(i)end end else ar.setStartLightsVisible(false)end end end;function script.drawUI(i)if bW()then return end;if b6 then ui.restoreCursor()if bN then if not ui.mouseDown(ui.MouseButton.Left)then bN=false;ui.resetMouseDragDelta(ui.MouseButton.Left)else local cQ=ui.mouseDragDelta(ui.MouseButton.Left)if cQ~=vec2()then bK:add(ui.mouseDragDelta(ui.MouseButton.Left))bf.appPositionX=bK.x;bf.appPositionY=bK.y;ui.resetMouseDragDelta(ui.MouseButton.Left)bN=true end end end;local cR=bf.classicLightsOrientation=="vertical"and vec2(80*bf.classicLightsScale,300*bf.classicLightsScale)or vec2(300*bf.classicLightsScale,80*bf.classicLightsScale)ui.transparentWindow("main",bK,bL,false,true,function()if bJ then ui.drawRectFilled(vec2(0,0),bM,rgbm(0.4,0.4,0.4,0.5),10,ui.CornerFlags.All)if ui.iconButton(ui.Icons.TrafficLight,vec2(32,32),b9.competitionMode and rgbm.colors.red or(b9.friendlyCompetitionMode and rgbm.colors.aqua or rgbm.colors.white))then bJ=not bJ end;if ui.itemHovered(ui.HoveredFlags.None)then ui.tooltip(function()ui.text("Close Settings")end)end;script.windowSettings(i)else if ui.iconButton(ui.Icons.TrafficLight,vec2(32,32),b9.competitionMode and rgbm.colors.red or(b9.friendlyCompetitionMode and rgbm.colors.aqua or rgbm.colors.white))then bJ=not bJ end;if ui.itemHovered(ui.HoveredFlags.None)then ui.tooltip(function()ui.text("Open Settings")end)end end;if ar.isStartLightsActive()or ar.isYellowBlinking()then ar.draw()else ar.setStartLightsVisible(false)if ui.windowHovered()then ui.setMouseCursor(ui.MouseCursor.Hand)if not bN and ui.mouseDown(ui.MouseButton.Left)then local cQ=ui.mouseDragDelta(ui.MouseButton.Left)if cQ~=vec2()then bK:add(ui.mouseDragDelta(ui.MouseButton.Left))bf.appPositionX=bK.x;bf.appPositionY=bK.y;ui.resetMouseDragDelta(ui.MouseButton.Left)bN=true end end end end;bM=vec2(ui.getMaxCursorX()+20,ui.getMaxCursorY())bL=vec2(math.max(cR.x,ui.getMaxCursorX()+20),math.max(cR.y,ui.getMaxCursorY()))end)else ar.draw()end end;function script.update(i)if not bO then return end;if b9.appConnected and b6 then if ar.trackHasLightMesh()then ar.disposeLightMesh()end;return end;bo=ac.getGameDeltaT()==0;if bw.isReplayActive then if not bq then c7()end;bq=true;local aD;local cS=bw.replayFrames-bw.replayCurrentFrame;if cS>bp+5 or cS<bp-5 then ar.stopStartLights()end;bp=cS;if bw.isReplayOnlyMode then aD=bw.currentSessionTime else local cT=0;if bw.isOnlineRace then cT=bw.currentSessionTime-bw.replayFrameMs*bw.replayFrames end;aD=cT+bw.replayCurrentFrame*bw.replayFrameMs end;for a9,cU in ipairs(bn)do local cV=bw.replayFrameMs*bw.replayPlaybackRate;if cU.time-cV<aD and cU.time+cV>aD then local ap=vec3(cU.positionX,cU.positionY,cU.positionZ)if ap~=ar.getTrackLightPosition or cU.rotation~=cU.rotation then ar.setAndSaveTrackLights(ap,cU.rotation)end;if cU.type=="start"then c9(false)else ca(cU.type=="false_start")end end end else bq=false end;if bo then return end;if bw.isOnlineRace and not(bw.isAdmin or b9.isAdmin)and ac.getPatchVersionCode()>=3465 then if ac.checkAdminPrivileges and bz>20 then bz=0;ac.checkAdminPrivileges()bS()end;bz=bz+i end;ar.updateTime(ac.getGameDeltaT())ar.updateStartLights(ac.getGameDeltaT())if br:pressed()then cc()end;if bs:pressed()then cd()end end;function script.openWindowSettings(i)ac.setWindowOpen("settings",true)end;if b6 then local function cW(cX)for a9,a6 in cX:iterate('TRACK_START_LIGHT_OPERATOR')do local cY=cX:get(a6,"STEAM_ID","")if ac.getUserSteamID()==cY then bR(ac.getCar(0).sessionID)b9.isAdmin=true end end end;local cX=ac.INIConfig.onlineExtras()cW(cX)ac.onOnlineWelcome(function(cv,a5)cW(a5)end)if b9.appConnected then return end;bA=setTimeout(function()if b9.appConnected then return end;ar.init(bf.classicLightsScale,bf.useSound,bf.classicLightsOrientation,bf.lightsModType,bf.sendChatMessage,bf.use3DLights,b6)ce()end,10)else ar.init(bf.classicLightsScale,bf.useSound,bf.classicLightsOrientation,bf.lightsModType,bf.sendChatMessage,bf.use3DLights,b6)b5.init("Start_Lights","https://raw.githubusercontent.com/Dasde/Start_Lights_updates/refs/heads/main/manifest.ini","https://github.com/Dasde/Start_Lights_updates/raw/refs/heads/main/Start_Lights.zip")b5.checkForUpdate()c2()ce()end

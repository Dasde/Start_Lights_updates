local a={}local b={GRAY=rgbm(0.2,0.2,0.2,1),LIGHT_GREEN=rgbm(0,1,0,1),YELLOW=rgbm(1,1,0,1),RED=rgbm(1,0,0,1),GREEN=rgbm(0,1,0,1),WHITE=rgbm(1,1,1,1),BLACK=rgbm(0,0,0,0.5),TRANSPARENT=rgbm(0,0,0,0),NEON_RED=rgbm(1,0,0,0.9),DARK_GRAY=rgbm(0.1,0.1,0.1,0.3)}local c={}for d=1,4 do c[d]={alpha=0,scale=0.5,active=false}end;function a.displayLights()a.configureLights(1,1,true)for d=1,4 do c[d].active=true;c[d].alpha=1;c[d].scale=1 end end;function a.hideLights()a.configureLights(0,0.5,false)end;function a.configureLights(e,f,g)for d=1,4 do c[d].alpha=e;c[d].scale=f;c[d].active=g end end;function a.configureLight(h,e,f,g)c[h].alpha=e;c[h].scale=f;c[h].active=g end;function a.fadeInLights(i)for d=1,4 do if c[d].active then c[d].alpha=math.min(c[d].alpha+i*12,1)c[d].scale=math.min(c[d].scale+i*12,1)if c[d].alpha>=1 and c[d].scale>=1 then c[d].active=false end end end end;local function j(k,l,m,n)local o=5;for p=o,1,-1 do local q=1+p/o*n/100;local r=m.mult*(1-(p-1)/o)*0.2;local s=l*q;local t=rgbm(m.r,m.g,m.b,r)ui.drawCircleFilled(k,s,t,64)end;ui.drawCircleFilled(k,l,m,64)end;function a.draw(u,v,w,x)local y=u=="vertical"and vec2(80*v,300*v)or vec2(300*v,80*v)local z=vec2(0,0)ui.drawRectFilled(z,z+y,b.BLACK,10*v)local A=30*v;local B=13*v;local C={}for d=1,4 do local D=z.y+(d-1)*(A*2+B)+B;local k;if u=='vertical'then k=vec2(z.x+y.x/2,D+A)else k=vec2(D+A,y.y/2)end;table.insert(C,k)end;for d,k in ipairs(C)do ui.drawCircleFilled(k,A,b.DARK_GRAY,64)end;if not x then for d=1,4 do if c[d].active then c[d].alpha=math.min(c[d].alpha+ui.deltaTime()*2,1)c[d].scale=math.min(c[d].scale+ui.deltaTime()*2,1)if c[d].alpha>=1 and c[d].scale>=1 then c[d].active=false end end end end;for d,k in ipairs(C)do local m;if x then m=b.YELLOW else if w<4 then if d<=w then m=b.RED end elseif w==4 then if d==4 then m=b.GREEN end end end;if m then local E=c[d]local e=E and E.alpha or 1;local f=E and E.scale or 1;local F=rgbm(m.r,m.g,m.b,e)local G=A*f;j(k,G,F,15)end end end;local H={}H.LightType={DBZ=0,VDM=1}local I=ac.getCarID(0).."_trackLights_Data"local J={ac.StructItem.key(I.."_"..0),lightsOnTrack=ac.StructItem.boolean(),lightsEmbedInTrack=ac.StructItem.boolean(),lightsOnTrackServer=ac.StructItem.boolean(),trackLightPosition=ac.StructItem.vec3(),trackLightsRotation=ac.StructItem.float()}local K=ac.connect(J,false,ac.SharedNamespace.Shared)local L=3;local M="go0"local N={top=0,bottom=1}local O=N.bottom;local P;local Q;local R;local S;local function T(U,V,W)local X=ac.findNodes('trackRoot:yes'):loadKN5(U.."\\vdm_lights.kn5")M="start_"L=4;O=N.bottom;X:setPosition(V)Q=vec3()if W~=0 then X:setRotation(vec3(0,1,0),math.rad(W))end;return X end;local function Y(U,V,W)local X=ac.findNodes('trackRoot:yes'):loadKN5(U.."\\letsgo.kn5")M="go0"L=3;O=N.top;X:findMeshes("Objet006"):setTransparent(true)Q=vec3(0,0.165,0)X:setPosition(V:clone():add(Q))if W~=0 then X:setRotation(vec3(0,1,0),math.rad(W))end;return X end;local function Z(_,V,W,a0)local a1=ac.findNodes('trackRoot:yes')local a2;K.trackLightPosition=V:clone()K.trackLightsRotation=W;if _==H.LightType.VDM then if a0 then web.loadRemoteAssets("https://github.com/Dasde/Start_Lights_updates/raw/refs/heads/main/assets/vdm_lights.zip",function(a3,U)P=T(U,V,W)end)return P end;return T("content/cars/vdm_lights",V,W)else if a0 then web.loadRemoteAssets("https://github.com/Dasde/Start_Lights_updates/raw/refs/heads/main/assets/letsgo.zip",function(a3,U)P=Y(U,V,W)end)return P end;return Y("assets",V,W)end end;function H.clearSavedLights(a0)H.removeLightMesh()K.lightsOnTrack=false;K.lightsOnTrackServer=false;if not a0 then local a4=ac.getFolder(ac.FolderID.CurrentTrackLayoutUI).."/".."track_lights.ini"if io.exists(a4)then ac.pauseFilesWatching(true)os.remove(a4)ac.pauseFilesWatching(false)end end end;local function a5()if K.lightsEmbedInTrack then return true end;if K.lightsOnTrack or K.lightsOnTrackServer then return false end;local X=ac.findNodes('trackRoot:yes'):findMeshes("go01")return X:name()~=""end;local function a6(a7,a8)return vec3(a7:get(a8,"X",0.000),a7:get(a8,"Y",0.000),a7:get(a8,"Z",0.000))end;local function a9(a7,a8,_,a0)if P then H.rotateTrackLights(a7:get(a8,"ROT",0))H.setTrackLightPosition(a6(a7,a8))else P=Z(_,a6(a7,a8),a7:get(a8,"ROT",0),a0)end;K.lightsOnTrackServer=true;K.lightsOnTrack=true end;function H.loadOnlineConfig(a7,_,a0)local aa=ac.getTrackFullID()if a7 then for ab,a8 in a7:iterate('TRACK_START_LIGHT')do local ad=a7:get(a8,"TRACK","")if ad==aa then a9(a7,a8,_,a0)end end end;if not K.lightsOnTrackServer then web.get('https://api.github.com/repos/Dasde/Start_Lights_tracks/contents',function(a3,ae)if ae then local af=JSON.parse(ae.body)for ab,ad in ipairs(af)do if ad.name==aa..".ini"then web.get(ad.download_url,function(a3,ae)local ag=ac.INIConfig.parse(ae.body)local a8="TRACK_START_LIGHT"a9(ag,a8,_,a0)end)end end end end)end end;function H.init(_,ah,a0)if P and ah then P:dispose()P=nil end;if a0 and H.trackHasLightMesh()then return end;if a5()then M="go0"ac.findNodes('trackRoot:yes'):findMeshes("Objet006"):setTransparent(true)ac.applyContentConfig(-1,"[CONDITION_02]\nNAME = BLINK1\nINPUT = NONE\n[CONDITION_03]\nNAME = BLINK2\nINPUT = NONE\n[CONDITION_04]\nNAME = BLINK3\nINPUT = NONE")K.trackLightPosition=ac.findNodes('trackRoot:yes'):findMeshes("go01"):boundingSphere()K.trackLightPosition:add(vec3(0,-0.99788,0))K.lightsEmbedInTrack=true;K.lightsOnTrack=true else if not a0 then K.lightsOnTrackServer=false end;local ai=ac.INIConfig.onlineExtras()H.loadOnlineConfig(ai,_,a0)if not K.lightsOnTrackServer and not a0 then local aj=ac.getFolder(ac.FolderID.CurrentTrack).."/extension/".."track_lights.ini"local a4=ac.getFolder(ac.FolderID.CurrentTrackLayoutUI).."/".."track_lights.ini"if io.exists(aj)then ac.pauseFilesWatching(true)local ak=ac.INIConfig.load(aj)ak:set("POSITION","X",ak:get("Position","x",0))ak:set("POSITION","Y",ak:get("Position","y",0))ak:set("POSITION","Z",ak:get("Position","z",0))ak:set("POSITION","ROT",ak:get("Position","rot",0))if not io.move(aj,a4)then os.remove(aj)end;ac.pauseFilesWatching(false)end;if io.exists(a4)then local al=ac.INIConfig.load(a4)if P then H.rotateTrackLights(al:get("POSITION","ROT",0))H.setTrackLightPosition(a6(al,"POSITION"))else P=Z(_,a6(al,"POSITION"),al:get("POSITION","ROT",0),a0)end;K.lightsOnTrack=true end end end end;function H.saveTrackLights(a0)if a0 then return end;local a4=ac.getFolder(ac.FolderID.CurrentTrackLayoutUI).."/".."track_lights.ini"local al=ac.INIConfig.load(a4)ac.pauseFilesWatching(true)al:set("POSITION","X",math.round(K.trackLightPosition.x,3))al:set("POSITION","Y",math.round(K.trackLightPosition.y,3))al:set("POSITION","Z",math.round(K.trackLightPosition.z,3))al:set("POSITION","ROT",math.round(K.trackLightsRotation,3))al:save()ac.pauseFilesWatching(false)end;function H.reloadTrackLights(am,ah,an)if P and ah then P:dispose()P=nil end;if P then H.rotateTrackLights(K.trackLightsRotation)H.setTrackLightPosition(K.trackLightPosition)else P=Z(am,K.trackLightPosition,K.trackLightsRotation,an)end end;function H.resetTrackLights(am,an)K.trackLightPosition=R;K.trackLightsRotation=S;if P then H.rotateTrackLights(K.trackLightsRotation)H.setTrackLightPosition(K.trackLightPosition)else P=Z(am,K.trackLightPosition,K.trackLightsRotation,an)end end;function H.displayLightMesh(_,a0)if P then P:dispose()end;P=Z(_,K.trackLightPosition,K.trackLightsRotation,a0)K.lightsOnTrack=true end;function H.displayLightMeshAheadCar(_,a0)if P then P:dispose()end;local ao=ac.getCar(0).bodyTransform:transformPoint(vec3(0,0,5))P=Z(_,ao,0,a0)end;function H:enableEditionMode(i,_,an)if ui.mouseDoubleClicked(ui.MouseButton.Left)then local ap=vec3(0,0,0)local aq=render.createMouseRay()if physics.raycastTrack(aq.pos,aq.dir,aq.length,ap)~=-1 then K.trackLightPosition=ap:clone()ap:add(Q)if P then P:setPosition(ap:clone())else K.trackLightsRotation=0;P=Z(_,K.trackLightPosition,0,an)end;K.lightsOnTrack=true end end end;function H.removeLightMesh()if not K.lightsEmbedInTrack and P then P:dispose()P=nil end end;H.TrackLightColors={green=rgb(0,128,32),orange=rgb(251,117,0),off=rgb(0,0,0)}function H.getLightCount()return L end;function H.getLightId(V)if O==N.top then return L-(V-1)else return V end end;function H.trackHasLightMesh()return(K.lightsOnTrack or K.lightsOnTrackServer)and K.trackLightPosition or K.lightsEmbedInTrack end;function H.trackHasEmbedLightMesh()return K.lightsEmbedInTrack end;function H.setTrackLightColor(h,m)local X=ac.findNodes('trackRoot:yes'):findMeshes(M..h)X:setMaterialProperty('ksEmissive',m)end;function H.getTrackLightPosition()if not K.trackLightPosition then return vec3()end;return K.trackLightPosition end;function H.setTrackLightPosition(ar)K.trackLightPosition=ar:clone()if P then P:setPosition(ar:clone():add(Q))end end;function H.keepTrackLightPositionAndRotation()R=K.trackLightPosition:clone()S=K.trackLightsRotation end;function H.getTrackLightsRotation()if not K.trackLightsRotation then return 0 end;return K.trackLightsRotation end;function H.setTrackLightsRotation(as)K.trackLightsRotation=as end;function H.rotateTrackLights(as)K.trackLightsRotation=as;P:setRotation(vec3(0,1,0),math.rad(as))end;function H.turnOffLights()for d=1,L+1,1 do H.setTrackLightColor(d,H.TrackLightColors.off)end end;local at={}local v=1.0;local u='vertical'local au=false;local av=ac.getCarID(0).."_trafficLights"local aw={ac.StructItem.key(av.."_"..0),Connected=ac.StructItem.boolean(),Started=ac.StructItem.boolean(),Light1On=ac.StructItem.boolean(),Light2On=ac.StructItem.boolean(),Light3On=ac.StructItem.boolean(),Light4On=ac.StructItem.boolean(),YellowBlinking=ac.StructItem.boolean()}local ax=ac.connect(aw,false,ac.SharedNamespace.Shared)ax.Connected=true;function at.setOrientation(ay)if ay=='vertical'or ay=='horizontal'then u=ay else error("Invalid orientation. Use 'vertical' or 'horizontal'.")end end;local am;function at.set3DModType(az)am=az end;local aA=nil;local aB=""local function aC(aD)if aA then aA:stop()aA:dispose()end;local aE=aB.."sounds/"..aD..".mp3"aA=ac.AudioEvent.fromFile({filename=aE,use3D=false,loop=false},false)aA.cameraExteriorMultiplier=1;aA.cameraInteriorMultiplier=1;aA.cameraTrackMultiplier=1;aA:start()end;local aF=0;local aG=0;local aH=0;local aI=false;local aJ=false;local aK=0;local x=false;local aL=0;local aM=1.0;local aN=false;local aO=2;local aP=false;local aQ=true;local aR=true;local aS=false;local aT=false;local an=false;function at.init(aU,aA,aV,aW,aX,aY,aZ)at.setScale(aU)at.setUseSound(aA)at.setOrientation(aV)at.set3DModType(aW)at.setSendChatMessage(aX)at.setUse3DLights(aY)H.init(aW,false,aZ)an=aZ or false;if an then web.loadRemoteAssets("https://github.com/Dasde/Start_Lights_updates/raw/refs/heads/main/sounds.zip",function(a3,U)aB=U.."\\"end)end end;function at.setUseSound(a_)aP=a_ end;function at.setUseClassicLightsHUD(a_)aQ=a_ end;function at.setUse3DLights(a_)aR=a_ end;function at.setSendChatMessage(a_)au=a_ end;function at.trackLightEdition(a_)aT=a_ end;function at.rotateTrackLights(as)H.rotateTrackLights(as)end;function at.getTrackLightsRotation()return H.getTrackLightsRotation()end;function at.setAndSaveTrackLights(ar,b0)if H.getTrackLightPosition()==ar and H.getTrackLightsRotation()==b0 then return end;H.setTrackLightPosition(ar)H.setTrackLightsRotation(b0)if not an then H.saveTrackLights()end;if not H.trackHasLightMesh()then if an then H.displayLightMesh(am,true)else H.init(am,false)end else H.rotateTrackLights(b0)end end;function at.getTrackLightConfig()local ar=H.getTrackLightPosition()return string.format("[TRACK_START_LIGHT_...]\nTRACK=%s\nX=%.3f\nY=%.3f\nZ=%.3f\nROT=%.3f",ac.getTrackFullID(),ar.x,ar.y,ar.z,H.getTrackLightsRotation())end;function at.saveTrackLights()H.saveTrackLights(an)end;function at.reloadTrackLights(ah)H.reloadTrackLights(am,ah,an)end;function at.keepTrackLightPositionAndRotation()H.keepTrackLightPositionAndRotation()end;function at.resetTrackLights()H.resetTrackLights(am,an)end;function at.clearSavedLights()H.clearSavedLights(an)end;function at.reloadOnlineConfig()H.loadOnlineConfig(ac.INIConfig.onlineExtras(),am,an)end;function at.SetIsYellowBlinking(b1)x=b1;if b1 then aL=0;a.displayLights()aI=true;ax.YellowBlinking=true;if not H.trackHasLightMesh()and aR then H.displayLightMeshAheadCar(am,an)end;H.setTrackLightColor(H.getLightId(1),H.TrackLightColors.orange)H.setTrackLightColor(H.getLightId(2),H.TrackLightColors.orange)H.setTrackLightColor(H.getLightId(3),H.TrackLightColors.orange)if H.getLightCount()>3 then H.setTrackLightColor(H.getLightId(4),H.TrackLightColors.orange)end;aH=0;aG=0;if aP then aC("longBeep")end else aI=false;ax.YellowBlinking=false;H.setTrackLightColor(H.getLightId(1),H.TrackLightColors.off)H.setTrackLightColor(H.getLightId(2),H.TrackLightColors.off)H.setTrackLightColor(H.getLightId(3),H.TrackLightColors.off)if H.getLightCount()>3 then H.setTrackLightColor(H.getLightId(4),H.TrackLightColors.off)end;if not H.trackHasLightMesh()then H.removeLightMesh()end end;ax.Started=false;ax.Light1On=false;ax.Light2On=false;ax.Light3On=false;ax.Light4On=false end;function at.isYellowBlinking()return x end;function at.isStartLightsActive()return aI end;function at.setStartLightsVisible(b2)aJ=b2 end;function at.stopStartLights()a.hideLights()aI=false;ax.Started=false;ax.Light1On=false;ax.Light2On=false;ax.Light3On=false;ax.Light4On=false;H.turnOffLights()aH=0;aG=0;aJ=false end;function at.triggerStartLights(b3,b4)aS=b4;if b3 then aO=b3 else aO=2 end;aI=true;ax.Started=true;ax.Light1On=false;ax.Light2On=false;ax.Light3On=false;ax.Light4On=false;aH=0;aG=0;aJ=true;if not H.trackHasLightMesh()and aR then H.displayLightMeshAheadCar(am,an)end;a.hideLights()aK=0;x=false;aL=0;if au and aS then ac.sendChatMessage("[StartLights] Get Ready")end end;function at.updateStartLights(i)if aT then H:enableEditionMode(i,am,an)end;if not aI then return end;if x then aJ=true;aL=aL+i;if aL>=aM then aL=0;aN=not aN;local b5=aN and 0 or 1;if b5==1 and aP then aC("longBeep")end;a.configureLights(b5,1,true)H.setTrackLightColor(H.getLightId(1),b5==1 and H.TrackLightColors.orange or H.TrackLightColors.off)H.setTrackLightColor(H.getLightId(2),b5==1 and H.TrackLightColors.orange or H.TrackLightColors.off)H.setTrackLightColor(H.getLightId(3),b5==1 and H.TrackLightColors.orange or H.TrackLightColors.off)if H.getLightCount()>3 then H.setTrackLightColor(H.getLightId(4),b5==1 and H.TrackLightColors.orange or H.TrackLightColors.off)end end else if aH<4 then aG=aG+i;if aG>=1 then aG=0;aH=aH+1;if aP then if aH<4 then aC("shortBeep")else aC("longBeep")end end;if au and aS then if aH<4 then ac.sendChatMessage(string.format("[StartLights] %d",aH))else ac.sendChatMessage("[StartLights] Go!")end end;if aH<=4 then a.configureLight(aH,0,0.5,true)else aI=false;aH=0;aG=0 end end end;aJ=aI;a.fadeInLights(i)if aH==4 then aK=aK+i;if aK>=aO then aH=5;a.hideLights()aI=false;ax.Started=false;if not H.trackHasLightMesh()then H.removeLightMesh()end end end;if aH>=1 and aH<4 then ax.Light1On=true;H.setTrackLightColor(H.getLightId(1),H.TrackLightColors.orange)else ax.Light1On=false;H.setTrackLightColor(H.getLightId(1),H.TrackLightColors.off)end;if aH>=2 and aH<4 then ax.Light2On=true;H.setTrackLightColor(H.getLightId(2),H.TrackLightColors.orange)else ax.Light2On=false;H.setTrackLightColor(H.getLightId(2),H.TrackLightColors.off)end;if aH>=3 and aH<4 then ax.Light3On=true;H.setTrackLightColor(H.getLightId(3),H.TrackLightColors.orange)else ax.Light3On=false;H.setTrackLightColor(H.getLightId(3),H.TrackLightColors.off)end;local L=H.getLightCount()if aH==4 then ax.Light4On=true;if L<4 then H.setTrackLightColor(H.getLightId(1),H.TrackLightColors.green)H.setTrackLightColor(H.getLightId(2),H.TrackLightColors.green)H.setTrackLightColor(H.getLightId(3),H.TrackLightColors.green)else H.setTrackLightColor(H.getLightId(4),H.TrackLightColors.green)end else ax.Light4On=false;if L>3 then H.setTrackLightColor(H.getLightId(4),H.TrackLightColors.off)end end end end;function at.draw()if aJ and aQ then a.draw(u,v,aH,x)end end;function at.drawMiniHUD()local b6=ui.windowWidth()/300;a.draw("horizontal",b6,aH,x)end;function at.setScale(f)v=f end;function at.getScale()return v end;function at.updateTime(i)aF=aF+i end;function at.trackHasLightMesh()return H.trackHasLightMesh()end;function at.trackHasEmbedLightMesh()return H.trackHasEmbedLightMesh()end;function at.getTrackLightPosition()return H.getTrackLightPosition()end;function at.disposeLightMesh()H.removeLightMesh()end;local b7={}local b8=__dirname==nil;local b9=ac.getCarID(0).."_startLightsApp"local ba={ac.StructItem.key(b9 .."_"..0),serverScriptConnected=ac.StructItem.boolean(),appConnected=ac.StructItem.boolean(),isAdmin=ac.StructItem.boolean(),competitionMode=ac.StructItem.boolean(),friendlyCompetitionMode=ac.StructItem.boolean()}local bb=ac.connect(ba,false,ac.SharedNamespace.Shared)if b8 then bb.serverScriptConnected=true else bb.appConnected=true end;local bc=20;local bd=30;local be=2;local bf=1;local bg=true;local bh=ac.storage{useTriggerRange=true,triggerRange=bc,greenLightDuration=be,classicLightsScale=bf,useSound=bg,classicLightsOrientation="horizontal",useClassicLightsHUD=true,use3DLights=true,lightsModType=H.LightType.DBZ,sendChatMessage=true,appPositionX=50,appPositionY=50}local bi=table.new(5,5)local bj=table.new(5,5)local bk;local bl;local bm;local bn;local bo=0;local bp;local bq=false;local br=0;local bs=false;local bt;local bu;local bv=false;local bw={}local bx={}local by=ac.getSim()local bz=false;local bA=vec2(150,50)local bB=0;local bC;local bD;local bE;local bF;local bG;local bH="This mode is for friendly battles. \nEvery driver has to activate it to participate.\nWith this mode every driver can activate the start lights without range restrictions.\nThe lights will be only activated for those with that mode activated"local bI=0;local bJ=0;local bK;local bL=false;local bM=vec2(bh.appPositionX,bh.appPositionY)local bN=vec2(500,500)local bO=vec2(500,500)local bP;local bQ=false;local function bR(bS)if not bS or bS==0 then return end;if not table.contains(bi,bS)then table.insert(bi,bS)end end;local function bT(bS)if not bS or bS==0 then return false end;if not table.contains(bj,bS)then table.insert(bj,bS)return true end;return false end;local function bU()if bb.isAdmin or by.isAdmin then if bT(ac.getCar(0).sessionID)then bD({admins=bj},true)end end end;local function bV(bW)return table.contains(bj,bW)or table.contains(bi,bW)end;local function bX()return bb.isAdmin or by.isAdmin or bV(ac.getCar(0).sessionID)end;local function bY()if not bQ then return true end;if b8 and bb.appConnected then return true end;return false end;local function bZ(b_,c0)c0=c0 or{}table.clear(c0)if not b_ then return end;for c1 in b_:gmatch("([^\n]*)\n?")do if c1~=""then if c1:match("^%s*#")then goto c2 end;local c3=c1:match("^%s*(.-)%s*$")if c3~=""then table.insert(c0,c3)end::c2::end end end;local function c4()if not io.exists(__dirname.."/whiteList.txt")then io.save(__dirname.."/whiteList.txt","# Add names to the whitelist, one per line\n# Example: John Doe\n")end;local c5=io.load(__dirname.."/whiteList.txt",nil)bZ(c5,bw)if table.count(bw)>0 then bv=true else bv=false end;ac.onFileChanged(__dirname.."/whiteList.txt",function()c5=io.load(__dirname.."/whiteList.txt",nil)bZ(c5,bw)if#bw>0 then bv=true else bv=false end end)if not io.exists(__dirname.."/blackList.txt")then io.save(__dirname.."/blackList.txt","# Add names to the blackList, one per line\n# Example: John Doe\n")end;local c6=io.load(__dirname.."/blackList.txt",nil)bZ(c6,bx)ac.onFileChanged(__dirname.."/blackList.txt",function()c6=io.load(__dirname.."/blackList.txt",nil)bZ(c6,bx)end)end;local function c7(az)if not by.isReplayActive then local V=at.getTrackLightPosition()local c8={type=az,time=by.currentSessionTime,positionX=V.x,positionY=V.y,positionZ=V.z,rotation=at.getTrackLightsRotation()}bo=bo+1;ac.writeReplayBlob("start_lights_"..bo,JSON.stringify(c8))ac.writeReplayBlob("start_lights_count",bo)end end;local function c9()bp={}bo=tonumber(ac.readReplayBlob("start_lights_count"))if bo and bo>0 then for d=1,bo+1,1 do local ca=ac.readReplayBlob("start_lights_"..d)local c8=JSON.parse(ca)table.insert(bp,c8)end end end;local function cb(b4)if at.isYellowBlinking()then return end;if not b8 then ac.setAppOpen("Start_Lights")ac.setAppWindowVisible("Start_Lights")ac.setWindowOpen("main",true)else ac.setAppWindowVisible("Start_Lights","main",false)end;at.triggerStartLights(bh.greenLightDuration,b4)c7("start")end;local function cc(cd)if cd and not b8 then ac.setAppOpen("Start_Lights")ac.setAppWindowVisible("Start_Lights")ac.setWindowOpen("main",true)end;at.SetIsYellowBlinking(cd)at.setStartLightsVisible(cd)c7(cd and"false_start"or"end_false_start")end;local function ce()if by.isOnlineRace then if bb.competitionMode then if bX()then if at.trackHasLightMesh()then bF{start=true,falseStart=false,endFalseStart=false,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation()}else ac.setMessage("Start Lights","No track light configured yet.",'illegal')end else ac.setMessage("Start Lights","Competition mode activated, only admins can operate the lights.",'illegal')end elseif bb.friendlyCompetitionMode then if at.trackHasLightMesh()then bF{start=true,falseStart=false,endFalseStart=false,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation(),friendlyCompetitionMode=true}else ac.setMessage("Start Lights","No track light configured yet.",'illegal')end elseif at.trackHasLightMesh()then if ac.getCar(0).position:distance(at.getTrackLightPosition())<=bh.triggerRange then bF{start=true,falseStart=false,endFalseStart=false,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation()}else ac.setMessage("Start Lights","You are too far.",'illegal')end else bF{start=true,falseStart=false,endFalseStart=false,lightPosition=nil,lightRotation=0}end else cb(true)end end;local function cf()if not at.isYellowBlinking()then if by.isOnlineRace then if bb.competitionMode then if bX()then bF{start=false,falseStart=true,endFalseStart=false,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation()}else ac.setMessage("Start Lights","Competition mode activated, only admins can operate the lights.",'illegal')end elseif bb.friendlyCompetitionMode then if at.trackHasLightMesh()then bF{start=false,falseStart=true,endFalseStart=false,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation(),friendlyCompetitionMode=true}else ac.setMessage("Start Lights","No track light configured yet.",'illegal')end elseif at.trackHasLightMesh()then if ac.getCar(0).position:distance(at.getTrackLightPosition())<=bd then bF{start=false,falseStart=true,endFalseStart=false,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation()}else ac.setMessage("Start Lights","You are too far.",'illegal')end else bF{start=false,falseStart=true,endFalseStart=false,lightPosition=nil,lightRotation=0}end else cc(false)end else if by.isOnlineRace then if bb.competitionMode then if bX()then bF{start=false,falseStart=false,endFalseStart=true,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation()}else ac.setMessage("Start Lights","Competition mode activated, only admins can operate the lights.",'illegal')end elseif bb.friendlyCompetitionMode then bF{start=false,falseStart=false,endFalseStart=true,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation(),friendlyCompetitionMode=true}else bF{start=false,falseStart=false,endFalseStart=true,lightPosition=nil,lightRotation=0}end else cc(false)end end end;local function cg()if ac.isLuaAppRunning("Traffic_Lights")then ac.uninstallApp("Traffic_Lights")end;bt=ac.ControlButton('Start_Lights_TRIGGER_START_LIGHTS',{keyboard={key=ui.KeyIndex.A}})bu=ac.ControlButton('Start_Lights_TOGGLE_FALSE_START',{keyboard={key=ui.KeyIndex.F}})bE=ac.OnlineEvent({key=ac.StructItem.key("Start_Lights_toggle_competition_mode_events"),competitionMode=ac.StructItem.boolean(),grantedUsers=ac.StructItem.array(ac.StructItem.int8(),16),admins=ac.StructItem.array(ac.StructItem.int8(),16),lightPosition=ac.StructItem.vec3(),lightRotation=ac.StructItem.float(),forceUpdate=ac.StructItem.boolean()},function(ch,c8)if bY()then return end;if bb.competitionMode==c8.competitionMode and ch.index==0 then return end;if c8.competitionMode~=bb.competitionMode then if c8.competitionMode then ac.setMessage("Start Lights","Competition Mode activated")bb.friendlyCompetitionMode=false else ac.setMessage("Start Lights","Competition Mode deactivated")end end;bb.competitionMode=c8.competitionMode;if(not at.trackHasLightMesh()or c8.forceUpdate)and c8.lightPosition and c8.lightPosition~=vec3()then at.setAndSaveTrackLights(c8.lightPosition,c8.lightRotation)end;for d=0,15,1 do bR(c8.grantedUsers[d])end;for d=0,15,1 do bT(c8.admins[d])end end,ac.SharedNamespace.Shared,false,{processPostponed=true})bD=ac.OnlineEvent({key=ac.StructItem.key("Start_Lights_update_granted_users_events"),addedGrantedUsers=ac.StructItem.array(ac.StructItem.int8(),16),removedGrantedUsers=ac.StructItem.array(ac.StructItem.int8(),16),admins=ac.StructItem.array(ac.StructItem.int8(),16)},function(ch,c8)if bY()then return end;if ch.index==0 then return end;bR(ch.sessionID)for d=0,15,1 do bR(c8.addedGrantedUsers[d])end;for d=0,15,1 do if table.contains(bi,c8.removedGrantedUsers[d])then table.removeItem(bi,c8.removedGrantedUsers[d])end end;for d=0,15,1 do bT(c8.admins[d])end end,ac.SharedNamespace.Shared)if table.contains(bj,ac.getCar(0).sessionID)then bD({admins=bj},true)end;bU()bF=ac.OnlineEvent({key=ac.StructItem.key("Start_Lights_trigger_events"),start=ac.StructItem.boolean(),falseStart=ac.StructItem.boolean(),endFalseStart=ac.StructItem.boolean(),lightPosition=ac.StructItem.vec3(),lightRotation=ac.StructItem.float(),friendlyCompetitionMode=ac.StructItem.boolean()},function(ch,c8)if bY()then return end;if not b8 and not bb.competitionMode and ch.index>0 then local ci=ac.getDriverName(ch.index)if bv then local cj=false;for ck,cl in ipairs(bw)do if ci:lower()==cl:lower()then cj=true;break end end;if not cj then return end else for ck,cl in ipairs(bx)do if ci:lower()==cl:lower()then return end end end end;if c8.endFalseStart then cc(false)return end;if c8.start or c8.falseStart then if(bb.competitionMode or bb.friendlyCompetitionMode)and not at.trackHasEmbedLightMesh()then if c8.lightPosition~=at.getTrackLightPosition()or c8.lightRotation~=at.getTrackLightsRotation()then at.setAndSaveTrackLights(c8.lightPosition,c8.lightRotation)end end;if not at.trackHasLightMesh()and c8.lightPosition and c8.lightPosition~=vec3()then at.setAndSaveTrackLights(c8.lightPosition,c8.lightRotation)end;if ch.index>0 then local cm=ch.position;local cn=ac.getCar(0).position;local co=c8.falseStart and bd or bh.triggerRange;local cp;local cq;if not(bb.friendlyCompetitionMode or bb.competitionMode)then cq=at.trackHasLightMesh()and at.getTrackLightPosition()or cn;cp=cm:distance(cq)if cp>co then return end end;if bh.useTriggerRange then cq=at.trackHasLightMesh()and at.getTrackLightPosition()or cm;cp=cn:distance(cq)if cp>co then return end end end;if c8.falseStart then cc(true)else cb(ch.index==0)end end end,ac.SharedNamespace.Shared)bG=ac.OnlineEvent({key=ac.StructItem.key("Start_Lights_request_data_events")},function(ch,c8)if bY()or ch.index==0 then return end;local cr=#bj;local cs=#bi;if table.contains(bj,ch.sessionID)then cr=cr-1 end;if table.contains(bi,ch.sessionID)then cs=cs-1 end;if(cr>0 or cs>0)and not bX()or not at.trackHasLightMesh()then return end;bE({competitionMode=bb.competitionMode,grantedUsers=bi,admins=bj,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation()},false,ch.sessionID)end,ac.SharedNamespace.Shared)setTimeout(function()bG({})end,10)ac.onClientConnected(function(ct,cu)if bY()then return end;setTimeout(function()if bX()or#bj==0 and#bi==0 then bE({competitionMode=bb.competitionMode,grantedUsers=bi,admins=bj,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation(),forceUpdate=true},false,cu)end end,5)end)ac.onClientDisconnected(function(ct,cu)if bY()then return end;if not bV(cu)then return end;if table.contains(bi,cu)then table.removeItem(bi,cu)if bX()then bD({removedGrantedUsers={cu}},true)end end;if table.contains(bj,cu)then table.removeItem(bj,cu)if bX()then bD({admins=bj},true)end end;if#bj==0 and#bi==0 then bb.competitionMode=false end end)ac.onSessionStart(function(cv,cw)if bY()then return end;if cw then bo=0;ac.writeReplayBlob("start_lights_count",0)c9()end end)ac.onChatMessage(function(cx,cy,cz)if bY()then return end;if cx:startsWith("[StartLights]")then return true end end)ac.checkAdminPrivileges()if by.isReplayActive then c9()end;bQ=true end;function script.windowCompetitionMode(i)if not bQ then return end;bK=true;if not(by.isAdmin or bV(ac.getCar(0).sessionID))then if bb.isAdmin then bU()end;ui.setCursor(10)ui.text("You are not a granted operator on this server.")end;local cA=(at.isStartLightsActive()or at.isYellowBlinking())and ui.windowSize():clone():add(vec2(0,-70))or ui.windowSize()ui.drawRect(vec2(0,0),cA,rgbm(0.6,0.6,0.6,0.15))ui.newLine(8)ui.pushFont(ui.Font.Title)ui.setNextItemWidth(450)ui.setCursorX(20)ui.text("Start Lights - Competition Mode    ")ui.setCursorX(20)if bb.competitionMode then ui.textColored("Activated",rgbm.colors.red)else ui.textColored("Not Activated",rgbm.colors.gray)end;ui.popFont()ui.newLine(2)ui.setCursorX(20)script.windowContentCompetitionMode(i)if at.isStartLightsActive()or at.isYellowBlinking()then local cB=ui.windowWidth()/300*80;ui.childWindow("mini-hud",vec2(ui.windowWidth(),cB),function()at.drawMiniHUD()end)end end;function script.windowContentCompetitionMode(i)local cC=vec2(120,50)if bX()then local cD=20;if at.trackHasLightMesh()then if ui.button("Force update start light position")then bE{competitionMode=bb.competitionMode,grantedUsers=bi,admins=bj,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation(),forceUpdate=true}end end;if not bl then bn=bb.competitionMode end;ui.setCursorX(cD)if ui.checkbox("Toggle Competition Mode",bn)then bn=not bn;bl=true end;if by.isAdmin or bb.isAdmin then ui.setCursorX(cD)ui.text("Lights operators :")if not bk then bm=table.clone(bi)end;for d,cE in ac.iterateCars()do local cF=cE.index==0 or table.contains(bm,cE.sessionID)or table.contains(bj,cE.sessionID)ui.setCursorX(cD)if table.contains(bj,cE.sessionID)then ui.pushDisabled()end;if cE.isConnected then if ui.checkbox(ac.getDriverName(cE.index),cF)then cF=not cF;bk=true;if cF then table.insert(bm,cE.sessionID)else table.removeItem(bm,cE.sessionID)end end end;if table.contains(bj,cE.sessionID)then ui.popDisabled()end end;bk=not table.same(bi,bm)else bk=false;bm=table.clone(bi)end;ui.newLine(15)bl=bb.competitionMode~=bn;if bk or bl then ui.setCursorX(30)if ui.button("Validate",cC)then local cG,cH={},{}for ab,cI in ipairs(bm)do if not table.contains(bi,cI)then table.insert(cG,cI)end end;for ab,cI in ipairs(bi)do if not table.contains(bm,cI)then table.insert(cH,cI)end end;bi=table.clone(bm)if bl then bE{competitionMode=bn,grantedUsers=bi,admins=bj,lightPosition=at.getTrackLightPosition(),lightRotation=at.getTrackLightsRotation()}bl=false;bk=false else bD{addedGrantedUsers=cG,removedGrantedUsers=cH}bk=false end end;ui.sameLine(0,ui.windowWidth()-300)if ui.button("Cancel",cC)then bl=false;bk=false end;ui.newLine(10)end end;if not bb.competitionMode then ui.setNextTextBold()ui.setCursorX(10)ui.text("Friendly Competition Mode")ui.setCursorX(10)local cJ;if bK then if bJ==0 then bJ=ui.measureText(bH).x+10 end;cJ=bJ else if bI==0 then bI=ui.measureText(bH).x end;cJ=bI end;ui.textAligned(bH,0,vec2(cJ,100))ui.setCursorX(10)if ui.checkbox("Toggle Friendly Competition Mode",bb.friendlyCompetitionMode)then bb.friendlyCompetitionMode=not bb.friendlyCompetitionMode end;ui.newLine()end;if bb.competitionMode and bX()or bb.friendlyCompetitionMode then ui.setCursorX(30)if ui.button("Trigger Start!",cC)then ce()end;ui.sameLine(0,ui.windowWidth()-300)if ui.button("False Start!",cC)then cf()end;ui.newLine(10)end end;function script.windowSettings(i)if not bQ then return end;bK=false;if bb.competitionMode then ui.pushFont(ui.Font.Huge)ui.setNextTextBold()ui.textColored("Competition Mode Activated!",rgbm.colors.red)ui.popFont()end;ui.pushFont(ui.Font.Title)ui.tabBar("settings",function()ui.tabItem("General",function()local cK;ui.text("Orientation :")if ui.radioButton("Vertical",bh.classicLightsOrientation=="vertical")then bh.classicLightsOrientation="vertical"at.setOrientation(bh.classicLightsOrientation)script.resizeWindowMain()end;if ui.radioButton("Horizontal",bh.classicLightsOrientation=="horizontal")then bh.classicLightsOrientation="horizontal"at.setOrientation(bh.classicLightsOrientation)script.resizeWindowMain()end;if ui.checkbox("Use Trigger Range",bh.useTriggerRange)then bh.useTriggerRange=not bh.useTriggerRange end;if bh.useTriggerRange then bh.triggerRange=ui.slider("Trigger Range (m)",bh.triggerRange,10,100)else bh.triggerRange=bc end;bh.greenLightDuration=ui.slider("Green Light Duration (s)",bh.greenLightDuration,1,10)bh.classicLightsScale,cK=ui.slider("Start Light Scale",bh.classicLightsScale,0.1,3)if cK then at.setScale(bh.classicLightsScale)script.resizeWindowMain()end;if ui.checkbox("Use Sound",bh.useSound)then bh.useSound=not bh.useSound;at.setUseSound(bh.useSound)end;if ui.checkbox("Display classic lights HUD",bh.useClassicLightsHUD)then bh.useClassicLightsHUD=not bh.useClassicLightsHUD;at.setUseClassicLightsHUD(bh.useClassicLightsHUD)end;if ui.checkbox("Send chat message to non user of the app (Get Ready,1,2,3,Go!)",bh.sendChatMessage)then bh.sendChatMessage=not bh.sendChatMessage;at.setSendChatMessage(bh.sendChatMessage)end;if ui.checkbox("Display 3D Lights in front of car. (if there are no lights on track already)",bh.use3DLights)then bh.use3DLights=not bh.use3DLights;at.setUse3DLights(bh.use3DLights)end;if bh.use3DLights and io.fileExists(ac.getFolder(ac.FolderID.ContentCars).."/vdm_lights/vdm_lights.kn5")then ui.text("Choose your start lights :")local cL=bh.lightsModType==H.LightType.DBZ;if ui.radioButton("DBZ",cL)then bh.lightsModType=not cL and H.LightType.DBZ or H.LightType.VDM;at.set3DModType(bh.lightsModType)at.reloadTrackLights(true)end;local cM=bh.lightsModType==H.LightType.VDM;if ui.radioButton("VDM",cM)then bh.lightsModType=not cM and H.LightType.VDM or H.LightType.DBZ;at.set3DModType(bh.lightsModType)at.reloadTrackLights(true)end end;ui.separator()ui.setNextTextBold()ui.text("How to trigger the start lights")if bb.competitionMode and not bX()then ui.textColored("Not available in Competition Mode",rgbm.colors.red)end;local cN=bt:boundTo()if not cN then ui.text("The control to start the lights isn't configured yet.")else ui.text("Press "..cN.." to start the lights")end;bt:control(bA,ui.ControlButtonControlFlags.IgnoreConflicts)ui.setNextTextBold()ui.text("How to trigger false start")cN=bu:boundTo()if not cN then ui.text("The control to trigger a false start isn't configured yet.")else ui.text("Press "..cN.." to trigger a false start")end;bu:control(bA,ui.ControlButtonControlFlags.IgnoreConflicts)if not b8 and ac.isLuaAppRunning("ext_controls")then ui.separator()ui.text("You can also change the controls with the Extended Controls app (Apps/Start Lights)")if ui.button("Open Extended Controls")then ac.setAppOpen("ext_controls")ac.setAppWindowVisible("ext_controls")end end;if not b8 then ui.separator()ui.setNextTextBold()ui.text("Whitelist and Blacklist Settings")if bv then ui.text("Whitelist is enabled. Only players in the whitelist can operate the start lights.")else ui.text("Whitelist is disabled. All players can operate the start lights.")end;if#bw>0 then ui.text("Whitelist: "..table.concat(bw,", "))else ui.text("Whitelist is empty.")end;if#bx>0 then ui.text("Blacklist: "..table.concat(bx,", "))else ui.text("Blacklist is empty.")end;if ui.button("Open Whitelist")then os.openInExplorer(__dirname.."/whiteList.txt")end;ui.sameLine(170)if ui.button("Open Blacklist")then os.openInExplorer(__dirname.."/blackList.txt")end end;ui.separator()ui.newLine(20)if not b8 then if ac.getPatchVersionCode()>=3459 then if ui.button("Restart app...",bA)then ac.restartApp()end;ui.newLine()end end;ui.newLine()end)ui.tabItem("Track light editor",function()if at.trackHasEmbedLightMesh()then ui.text("This track has its own start lights already. It's not editable.")ui.newLine()elseif at.trackHasLightMesh()then ui.text(string.format("A track start light is already on track at position\n%s.",at.getTrackLightPosition()))ui.separator()ui.newLine(15)else ui.newLine(5)if not b8 then ui.text("If you have a track_lights.ini file for the track paste it in the track layout folder and restart the app.")ui.separator()ui.newLine()if ac.getPatchVersionCode()>=3459 then if ui.button("Restart app...",bA)then ac.restartApp()end end end;ui.sameLine()end;if not b8 then if not at.trackHasEmbedLightMesh()then if ui.button("Open track folder...",vec2(220,bA.y))then local a4=ac.getFolder(ac.FolderID.CurrentTrackLayoutUI).."/".."track_lights.ini"if io.exists(a4)then os.showInExplorer(a4)else os.openInExplorer(ac.getFolder(ac.FolderID.CurrentTrackLayoutUI))end end;ui.sameLine()end end;if ui.button("Reload Online Config...",vec2(240,bA.y))then bz=false;at.reloadOnlineConfig()end;ui.sameLine()if at.trackHasLightMesh()and not at.trackHasEmbedLightMesh()and not(bb.competitionMode and not bX())then if ui.button("Remove",bA)then bz=false;at.trackLightEdition(bz)at.clearSavedLights()end end;if bz then ui.setMouseCursor(ui.MouseCursor.ResizeAll)ui.separator()ui.newLine(5)ui.text("Just double click on the map where you want to place the start lights.\nClick the save button when you are done.")ui.newLine(15)local cO=refnumber(at.getTrackLightsRotation())ui.setNextItemWidth(350)ui.setCursorX((ui.windowWidth()-350)/2)if ui.slider("'##rotationSliderID'",cO,0,360,'Rotation: %.1f')then at.rotateTrackLights(cO.value)end;ui.newLine(5)ui.setCursorX((ui.windowWidth()-2*bA.x-10)/2)if ui.button("Save",bA)then bz=false;at.trackLightEdition(bz)at.saveTrackLights()end;ui.sameLine()if ui.button("Cancel",bA)then bz=false;at.trackLightEdition(bz)at.resetTrackLights()end else ui.setMouseCursor(ui.MouseCursor.Arrow)if not at.trackHasEmbedLightMesh()and not(bb.competitionMode and not bX())then ui.sameLine()if ui.button(at.trackHasLightMesh()and"Edit Light..."or"Create Light...",bA)then bz=true;at.keepTrackLightPositionAndRotation()at.trackLightEdition(bz)end end;if at.trackHasLightMesh()then ui.sameLine()if ui.button("Copy data",bA)then if ac.setClipboardText(at.getTrackLightConfig())then ui.toast(ui.Icons.Clipboard,"Data copied to clipboard")end end end end;ui.newLine()end)if bb.competitionMode and not bX()then ui.tabItem("Competition Mode",function()ui.pushFont(ui.Font.Huge)ui.setNextTextBold()ui.textColored("Competition Mode Activated!",rgbm.colors.red)ui.popFont()ui.text("Only admins can operate the Track Lights")end)else ui.tabItem("Competition Mode",function()script.windowContentCompetitionMode(i)ui.newLine()end)end;if not b8 then ui.tabItem("Updates",function()b7.drawUI()end)else ui.tabItem("Download the App!",function()ui.bulletText("Start Lights on every servers")ui.bulletText("Ability to operate the semaphore from the pit")ui.bulletText("Ability to save and reload your semaphore position for a track")ui.text("Download the App :")ui.sameLine()if ui.textHyperlink("https://vosan.co/app-tools/start-lights")then os.openURL("https://vosan.co/app-tools/start-lights")end;ui.newLine()end)end;ui.tabItem("About",function()ui.drawCircleFilled(vec2(ui.getCursorX()+ui.measureText("The Start Lights ").x+12,ui.getCursorY()+12),12,rgbm.colors.white)ui.text("The Start Lights "..string.codePointToUTF8(8482).." system is developped by")ui.sameLine()if ui.textHyperlink("DaZD")then os.openURL("https://linktr.ee/dazdsim")end;ui.text("Feel free to contact me if you need my assistance to set up a competition or a server or any feedback.")ui.text("My Discord is in the linktree linked above.")ui.newLine()ui.text("With ")ui.sameLine()if ui.textHyperlink("CDT - Ömer Bağdatlı")then os.openURL("https://www.instagram.com/rahvanr1/")end;ui.sameLine()ui.text(" we are building a list of semaphore position by track.")ui.text("That list is already used by the App, no need to add a Start Lights semaphore on those tracks.")ui.text("Contact us if you want to contribute or if you want your track to be added.")ui.newLine()ui.setNextTextBold()ui.text("How To")ui.newLine()ui.setNextTextBold()ui.bulletText("To add the Start Lights script to your server add this to your configuration :")local cP="[SCRIPT_...]\nSCRIPT = 'https://github.com/Dasde/Start_Lights_updates/raw/refs/heads/main/start_light_server_script.lua'"ui.text(cP)if ui.button("Copy to clipboard")then if ac.setClipboardText(cP)then ui.toast(ui.Icons.Clipboard,"Data copied to clipboard")end end;ui.newLine()ui.setNextTextBold()ui.bulletText("Operators can be added like this :")local cQ="[TRACK_START_LIGHT_OPERATOR_...]\nSTEAM_ID=Steam id of the operator"ui.text(cQ)if ui.button("Copy to clipboard###2")then if ac.setClipboardText(cQ)then ui.toast(ui.Icons.Clipboard,"Data copied to clipboard")end end;ui.newLine()ui.setNextTextBold()ui.bulletText("Set custom semaphore position like this :")ui.text('Go to the track, position the semaphore then click "Copy data" in the "Track light editor" tab.')ui.text("Then paste the text in your configuration file.")ui.text("It should look like this :")ui.text("[TRACK_START_LIGHT_...]\nTRACK=cfd_val_de_vienne_2022\nX=495.0426940918\nY=1.5083720684052\nZ=69.54564666748\nROT=344.89999389648\n")ui.newLine()ui.separator()ui.text("You can support the project here :")ui.sameLine()if ui.textHyperlink("paypal.me/DaZDSim")then os.openURL("https://www.paypal.com/paypalme/DaZDSim")end;ui.newLine()end)end)ui.popFont()end;function script.resizeWindowMain()if b8 then return end;local cR=bh.classicLightsOrientation=="vertical"and vec2(math.max(80*bh.classicLightsScale,200),math.max(300*bh.classicLightsScale,50))or vec2(math.max(300*bh.classicLightsScale,200),math.max(80*bh.classicLightsScale,50))ac.setWindowSizeConstraints("main",cR,cR)end;function script.windowMain(i)if not bQ then return end;bK=false;if at.isStartLightsActive()or at.isYellowBlinking()then script.drawUI(i)else if ui.windowHovered(bit.bor(ui.HoveredFlags.RootAndChildWindows,ui.HoveredFlags.AllowWhenBlockedByActiveItem))then at.setStartLightsVisible(true)script.drawUI(i)if not b8 and not ac.isWindowOpen("settings")then ui.offsetCursorY((ui.windowHeight()-50)/2)ui.offsetCursorX((ui.windowWidth()-200)/2)if ui.button("Show Start Lights settings...",vec2(200,50))then script.openWindowSettings(i)end end else at.setStartLightsVisible(false)end end end;function script.drawUI(i)if bY()then return end;if b8 then ui.restoreCursor()if bP then if not ui.mouseDown(ui.MouseButton.Left)then bP=false;ui.resetMouseDragDelta(ui.MouseButton.Left)else local cS=ui.mouseDragDelta(ui.MouseButton.Left)if cS~=vec2()then bM:add(ui.mouseDragDelta(ui.MouseButton.Left))bh.appPositionX=bM.x;bh.appPositionY=bM.y;ui.resetMouseDragDelta(ui.MouseButton.Left)bP=true end end end;local cT=bh.classicLightsOrientation=="vertical"and vec2(80*bh.classicLightsScale,300*bh.classicLightsScale)or vec2(300*bh.classicLightsScale,80*bh.classicLightsScale)ui.transparentWindow("main",bM,bN,false,true,function()if bL then ui.drawRectFilled(vec2(0,0),bO,rgbm(0.4,0.4,0.4,0.5),10,ui.CornerFlags.All)if ui.iconButton(ui.Icons.TrafficLight,vec2(32,32),bb.competitionMode and rgbm.colors.red or(bb.friendlyCompetitionMode and rgbm.colors.aqua or rgbm.colors.white))then bL=not bL end;if ui.itemHovered(ui.HoveredFlags.None)then ui.tooltip(function()ui.text("Close Settings")end)end;script.windowSettings(i)else if ui.iconButton(ui.Icons.TrafficLight,vec2(32,32),bb.competitionMode and rgbm.colors.red or(bb.friendlyCompetitionMode and rgbm.colors.aqua or rgbm.colors.white))then bL=not bL end;if ui.itemHovered(ui.HoveredFlags.None)then ui.tooltip(function()ui.text("Open Settings")end)end end;if at.isStartLightsActive()or at.isYellowBlinking()then at.draw()else at.setStartLightsVisible(false)if ui.windowHovered()then ui.setMouseCursor(ui.MouseCursor.Hand)if not bP and ui.mouseDown(ui.MouseButton.Left)then local cS=ui.mouseDragDelta(ui.MouseButton.Left)if cS~=vec2()then bM:add(ui.mouseDragDelta(ui.MouseButton.Left))bh.appPositionX=bM.x;bh.appPositionY=bM.y;ui.resetMouseDragDelta(ui.MouseButton.Left)bP=true end end end end;bO=vec2(ui.getMaxCursorX()+20,ui.getMaxCursorY())bN=vec2(math.max(cT.x,ui.getMaxCursorX()+20),math.max(cT.y,ui.getMaxCursorY()))end)else at.draw()end end;function script.update(i)if not bQ then return end;if bb.appConnected and b8 then if at.trackHasLightMesh()then at.disposeLightMesh()end;return end;bq=ac.getGameDeltaT()==0;if by.isReplayActive then if not bs then c9()end;bs=true;local aF;local cU=by.replayFrames-by.replayCurrentFrame;if cU>br+5 or cU<br-5 then at.stopStartLights()end;br=cU;if by.isReplayOnlyMode then aF=by.currentSessionTime else local cV=0;if by.isOnlineRace then cV=by.currentSessionTime-by.replayFrameMs*by.replayFrames end;aF=cV+by.replayCurrentFrame*by.replayFrameMs end;for ab,cW in ipairs(bp)do local cX=by.replayFrameMs*by.replayPlaybackRate;if cW.time-cX<aF and cW.time+cX>aF then local ar=vec3(cW.positionX,cW.positionY,cW.positionZ)if ar~=at.getTrackLightPosition or cW.rotation~=cW.rotation then at.setAndSaveTrackLights(ar,cW.rotation)end;if cW.type=="start"then cb(false)else cc(cW.type=="false_start")end end end else bs=false end;if bq then return end;if by.isOnlineRace and not(by.isAdmin or bb.isAdmin)and ac.getPatchVersionCode()>=3465 then if ac.checkAdminPrivileges and bB>20 then bB=0;ac.checkAdminPrivileges()bU()end;bB=bB+i end;at.updateTime(ac.getGameDeltaT())at.updateStartLights(ac.getGameDeltaT())if bt:pressed()then ce()end;if bu:pressed()then cf()end end;function script.openWindowSettings(i)ac.setWindowOpen("settings",true)end;if b8 then local function cY(cZ)for ab,a8 in cZ:iterate('TRACK_START_LIGHT_OPERATOR')do local c_=cZ:get(a8,"STEAM_ID","")if ac.getUserSteamID()==c_ then bT(ac.getCar(0).sessionID)bb.isAdmin=true end end end;local cZ=ac.INIConfig.onlineExtras()cY(cZ)ac.onOnlineWelcome(function(cx,a7)cY(a7)end)if bb.appConnected then return end;bC=setTimeout(function()if bb.appConnected then return end;at.init(bh.classicLightsScale,bh.useSound,bh.classicLightsOrientation,bh.lightsModType,bh.sendChatMessage,bh.use3DLights,b8)cg()end,10)else at.init(bh.classicLightsScale,bh.useSound,bh.classicLightsOrientation,bh.lightsModType,bh.sendChatMessage,bh.use3DLights,b8)b7.init("Start_Lights","https://raw.githubusercontent.com/Dasde/Start_Lights_updates/refs/heads/main/manifest.ini","https://github.com/Dasde/Start_Lights_updates/raw/refs/heads/main/Start_Lights.zip")b7.checkForUpdate()c4()cg()end
